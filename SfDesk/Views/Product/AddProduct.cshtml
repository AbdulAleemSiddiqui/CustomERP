@model SfDesk.Models.Item
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}

<div class="card-body">
    <div class="custom-tab">
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#1" aria-controls="1" role="tab" data-toggle="tab">General</a></li>
            <li id="AP" role="presentation"><a href="#ta2" aria-controls="ta2" role="tab" data-toggle="tab">Assembly Product</a></li>

        </ul>
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="1">
                  
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-md-12">
                            <div class="form-group col-md-2">
                                <div class="col-sm-1">
                                    @Html.RadioButton("Product", true)
                                    @Html.ValidationMessage("Product", "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("Product", htmlAttributes: new { @class = "control-label col-sm-11", @style = " padding-top: 0;  text-align:left" })
                            </div>
                            <div class="form-group col-md-2">
                                <div class="col-sm-1">
                                    @Html.RadioButton("Product", false)
                                    @Html.ValidationMessage("Product", "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("Services", htmlAttributes: new { @class = "control-label col-sm-11", @style = " padding-top: 0;  text-align:left" })
                            </div>
                           
                        </div>
                        <div class="col-md-12">

                            <div class="form-group col-md-3">
                                @Html.Label("Product Type", htmlAttributes: new { @class = "control-label col-sm-4", @style = " padding: 5px;  text-align:left ;font-weight:bold;" })
                                <div class="col-sm-8">
                                    @Html.HiddenFor(Model => Model.Cat_ID)
                                    <input type="text" name="Cat_Name" list="Cat_List" id="Cat_Name" class="form-control text-box">
                                    <datalist id="Cat_List">

                                        @foreach (var item in ViewBag.Cat)
                                        {
                                            <option id="@item.Cat_ID" data-id="@item.Cat_ID" value="@item.Cat_Name"></option>
                                        }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Cat_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-3">
                                @Html.Label("Item Type", htmlAttributes: new { @class = "control-label col-sm-4", @style = " padding: 5px;  text-align:left ;font-weight:bold;" })
                                <div class="col-sm-8">
                                    @Html.HiddenFor(Model => Model.Cat_ID)
                                    <input type="text" name="Cat_Name" list="Cat_List" id="Cat_Name" class="form-control text-box">
                                    <datalist id="Cat_List">

                                        @foreach (var item in ViewBag.Cat)
                                        {
                                            <option id="@item.Cat_ID" data-id="@item.Cat_ID" value="@item.Cat_Name"></option>
                                        }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Cat_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-md-3">
                                @Html.Label("Product Name", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    @Html.Editor("Product Name", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("Product Name", "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group col-md-3">
                                @Html.Label("Unit Of Measure", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    @Html.Editor("Unit", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("Unit", "", new { @class = "text-danger" })
                                </div>

                            </div>

                        </div>
                        <div class="col-md-12">
                            <div class="form-group col-md-6">
                                <div class="col-sm-1">
                                    @Html.CheckBox("fractional units", false)
                                    @Html.ValidationMessage("fractional units", "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("Do you sell or purchase in fractional units? (e.g. 0.5 kg, 2.25 lt, etc.)", "Do you sell or purchase in fractional units? (e.g. 0.5 kg, 2.25 lt, etc.)", htmlAttributes: new { @class = "col-sm-11", @style = " padding: 0px; text-align:left" })
                            </div>
                            <div class="col-lg-12"></div>
                            <div class="form-group col-md-6">
                                <div class="col-sm-1">
                                    @Html.CheckBox("calculate product quantity", false)
                                    @Html.ValidationMessage("calculate product quantity", "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("Do you sell or purchase in fractional units? (e.g. 0.5 kg, 2.25 lt, etc.)", "Do you sell or purchase in fractional units? (e.g. 0.5 kg, 2.25 lt, etc.)", htmlAttributes: new { @class = "col-sm-11", @style = " padding: 0;  text-align:left" })
                            </div>

                        </div>
                        <div class="col-md-12">
                            <hr />
                            <div class="form-group col-md-6">
                                <div class="col-sm-1">
                                    @Html.CheckBox("fractional units", false)
                                    @Html.ValidationMessage("fractional units", "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("Do you sell or purchase in fractional units? (e.g. 0.5 kg, 2.25 lt, etc.)", "Track Inventory", htmlAttributes: new { @class = "col-sm-11", @style = " padding: 0px; text-align:left" })
                            </div>
                            <div class="col-lg-12"></div>
                            <div class="form-group col-md-6">
                                <div class="col-sm-1">
                                    @Html.CheckBox("calculate product quantity", false)
                                    @Html.ValidationMessage("calculate product quantity", "", new { @class = "text-danger" })
                                </div>

                                @Html.Label("Do you sell or purchase in fractional units? (e.g. 0.5 kg, 2.25 lt, etc.)", "Do you manage Batch Product for this Product?", htmlAttributes: new { @class = "col-sm-11", @style = " padding: 0;  text-align:left" })
                            </div>

                        </div>
                        <div class="col-md-12">
                            <hr />
                            <div class="form-group col-md-6">
                                @Html.Label("Minimum Stock Level", htmlAttributes: new { @class = "control-label col-sm-4", @style = " padding: 5px;  text-align:left ;font-weight:bold;" })
                                <div class="col-sm-8">
                                    @Html.Editor("Stock_level", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("Product", "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                @Html.Label("COA", htmlAttributes: new { @class = "control-label col-sm-2", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    <input type="text" name="Purchase_Account_Name" list="Purchase_Account_List" id="Purchase_Account_Name" class="form-control text-box">
                                    <datalist id="Purchase_Account_List">
                                        @{
                                            var ab = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                            ab = ab.FindAll(x => x.Group_ID == 2 || x.Group_ID == 5 || x.Group_ID == 4 || x.Group_ID == 24);
                                        }

                                        @foreach (var item in ab)
                                        {
                                            <option id="@item.COA_ID" data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                        }
                                    </datalist>


                                    @Html.ValidationMessage("Unit", "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <input type="checkbox" id="isPurchase" > Do you purchase this product? <br />
                        
                        </div>
                        <div class="col-md-12" id="Purchase">

                            <hr />
                            <div class="form-group col-md-6">
                                @Html.Label("Purchase Price", htmlAttributes: new { @class = "control-label col-sm-4", @style = " padding: 5px;  text-align:left ;font-weight:bold;" })
                                <div class="col-sm-8">
                                    @Html.Editor("Purchase Price", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("Purchase Price", "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("Purchase Discount Account", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    <input type="text" name="Purchase_Account_Name" list="Purchase_Account_List" id="Purchase_Account_Name" class="form-control text-box">
                                    <datalist id="Purchase_Account_List">
                                        @{
                                            ab = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                            ab = ab.FindAll(x => x.Group_ID == 2 || x.Group_ID == 5 || x.Group_ID == 4 || x.Group_ID == 24);
                                        }

                                        @foreach (var item in ab)
                                        {
                                            <option id="@item.COA_ID" data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                        }
                                    </datalist>
                                    @Html.ValidationMessage("Purchase Discount Account", "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("Purchase Discount Account", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    <input type="text" name="Purchase_Account_Name" list="Purchase_Account_List" id="Purchase_Account_Name" class="form-control text-box">
                                    <datalist id="Purchase_Account_List">
                                        @{
                                            ab = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                            ab = ab.FindAll(x => x.Group_ID == 2 || x.Group_ID == 5 || x.Group_ID == 4 || x.Group_ID == 24);
                                        }

                                        @foreach (var item in ab)
                                        {
                                            <option id="@item.COA_ID" data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                        }
                                    </datalist>
                                    @Html.ValidationMessage("Purchase Discount Account", "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                @Html.Label("TAX", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    @Html.HiddenFor(Model => Model.P_Tax_ID)
                                    <input type="text" name="P_Tax_Name" list="P_Tax_List" id="P_Tax_Name" class="form-control text-box">
                                    <datalist id="P_Tax_List">

                                        @foreach (var item in ViewBag.tax)
                                        {
                                            <option id="@item.SalesTax_ID" data-id="@item.SalesTax_ID" value="@item.SalesTax_Name"></option>
                                        }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.P_Tax_ID, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-12">
                            <input type="checkbox" id="isSale"> Do you purchase this Sale? <br />

                        </div>
                        <div class="col-md-12" id="Sale">
                            <hr />
                            <div class="form-group col-md-6">
                                @Html.Label("sale Price", htmlAttributes: new { @class = "control-label col-sm-4", @style = " padding: 5px;  text-align:left ;font-weight:bold;" })
                                <div class="col-sm-8">
                                    @Html.Editor("sale Price", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("sale Price", "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("sale Discount Account", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    <input type="text" name="Purchase_Account_Name" list="Purchase_Account_List" id="Purchase_Account_Name" class="form-control text-box">
                                    <datalist id="Purchase_Account_List">
                                        @{
                                            ab = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                            ab = ab.FindAll(x => x.Group_ID == 2 || x.Group_ID == 5 || x.Group_ID == 4 || x.Group_ID == 24);
                                        }

                                        @foreach (var item in ab)
                                        {
                                            <option id="@item.COA_ID" data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                        }
                                    </datalist>
                                    @Html.ValidationMessage("sale Discount Account", "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("sale Discount Account", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    <input type="text" name="Purchase_Account_Name" list="Purchase_Account_List" id="Purchase_Account_Name" class="form-control text-box">
                                    <datalist id="Purchase_Account_List">
                                        @{
                                            ab = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                            ab = ab.FindAll(x => x.Group_ID == 2 || x.Group_ID == 5 || x.Group_ID == 4 || x.Group_ID == 24);
                                        }

                                        @foreach (var item in ab)
                                        {
                                            <option id="@item.COA_ID" data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                        }
                                    </datalist>   @Html.ValidationMessage("sale Discount Account", "", new { @class = "text-danger" })
                                </div>

                            </div>


                            <div class="form-group col-md-6">
                                @Html.Label("TAX", htmlAttributes: new { @class = "control-label col-sm-4", @style = "font-weight:bold; padding: 5px;  text-align:left" })
                                <div class="col-sm-8">
                                    @Html.HiddenFor(Model => Model.S_Tax_ID)
                                    <input type="text" name="S_Tax_Name" list="S_Tax_List" id="S_Tax_Name" class="form-control text-box">
                                    <datalist id="S_Tax_List">

                                        @foreach (var item in ViewBag.tax)
                                        {
                                            <option id="@item.SalesTax_ID" data-id="@item.SalesTax_ID" value="@item.SalesTax_Name"></option>
                                        }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.S_Tax_ID, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12" style="padding:15px">
                                <br />
                                <input type="button" id="create" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>

                                            }

            </div>
            <div role="tabpanel" class="tab-pane" id="ta2">
               
               </div>
   
        </div>
    </div>
</div>
@section scripts{
<script src="~/assets/js/jsgrid.min.js"></script>
<script src="~/assets/js/TypableDropdown.js"></script>
<script src="~/assets/js/db.js"></script>
<script>
       function detail()
    {
        $.get('@Url.Action("Add_Product_Assembly")', function (data) { $("#ta2").html(data); });

       }
    var isAssembled = false;
    $(document).ready(function () {
        $("#Sale").hide('slow');
        $("#Purchase").hide('slow');
        $("#AP").hide('slow');
        $('#isSale').change(function () {


            $("#Sale").toggle('slow')

        });
        $('#isPurchase').change(function () {


            $("#Purchase").toggle('slow')

        });
        $('#Cat_Name').change(function () {
            if (this.value == 'Packaging') {

                isAssembled = true

            }
            else {
                $("#AP").hide('slow');
                isAssembled = false
            }
        });
      

    });
    $("#create").click(function (e) {
        e.preventDefault();
        if (isAssembled) {
            $("#AP").show('slow');
            detail();
            $('a[href="#ta2"]').click();

        }
        var data = {};

        $('form').serializeArray().map(function (x) { data[x.name] = x.value; });
        debugger
        //data.Q_Details = arr;
        //data.Q_Charges = mytrans;
        //data.Q_Taxs = Mytax;
        //data.Total = grand_total;
        $.ajax({
            url: '@Url.Action("master")',
            type: 'Post',
            dataType: 'json',
            data: {
                c: data
            },
            success: function (data) {
                //window.location.href = '//Url.Action("ShowAll", "Quotation")';
                if (isAssembled) {
                    details();
                    $( ".custom-tab" ).tabs({ active: 'ta2' });

                }
            }

        });
    });



</script>
}