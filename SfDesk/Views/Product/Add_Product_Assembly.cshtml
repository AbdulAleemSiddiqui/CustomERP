@model List<SfDesk.Models.Recipe>

<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<style>
    .total-row td {
        border-top: 2px solid #efefef;
    }
</style>
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert">
                <p><b>Input</b></p>
                <div class="jsgrid-table-panel">
                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>
                    <br />
                </div>
                <div class="form-group col-md-6">
                    <div class="col-sm-1">
                        @Html.CheckBox("Account", false)
                        @Html.ValidationMessage("Account Expenses (Optional)", "", new { @class = "text-danger" })
                    </div>

                    @Html.Label("Account Expenses (Optional)", "Account Expenses (Optional)", htmlAttributes: new { @class = "col-sm-11", @style = " padding: 0px; text-align:left" })
                </div>
                <div class="jsgrid-table-panel">
                    <div id="expGrid" class="table table-striped table-bordered dataTable no-footer"></div>
                    <br />
                    <hr />
                </div>
                <p><hr /><b>Output</b></p>
                <div class="jsgrid-table-panel">
                    <div id="Grid" class="table table-striped table-bordered dataTable no-footer"></div>
                    <br />
                </div>
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                  
                    <div class="form-group">
                        <div class="col-md-12" style="padding:15px">
                            <br />
                            <input type="button" id="create" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            </div>
            <!-- /# card -->
        </div>
        <!-- /# column -->
    </div>
</div>

<script>
    var expences = []
    var allexpences=[]
    var inputs = []
    var outputs = []
   var items = []
   $(document).ready(function () {
       $("#expGrid").hide('slow');
       $('#Account').change(function () {


           $("#expGrid").toggle('slow')

       });
        loadData();
     //   clients = arr
    })
    function newRow(id) {
        $("#" + id).jsGrid({ inserting: true });

        var tr = $("#" + id + " .jsgrid-insert-row").closest("tr");
        //if (id === "jsGrid") {
        //    var disble = tr.find("td:eq(7)")
        //    var txtdisabled = disble.find("input:eq(0)").attr("disabled", "disabled");
        //}
        var td = tr.find("td:eq(0)")



        inout = td.find("select:eq(0)")
        if (id === "jsgrid")
            var inout = td.find("input:eq(0)")
        var last = $(tr).find('td:last').html('')
        $(inout).select().focus();
    } // // isme change he
    function insert_on_enter(field, id) {

        field.on("keydown", function (e) {


            if (e.keyCode === 13 || e.keyCode === 9) {
                $("#" + id).jsGrid("insertItem").done(function () {
                    $("#" + id).jsGrid("clearInsert");
                    newRow(id)
                });
                return false;
            }
        });
    }  // isme change he
    function update_on_enter(field, id) {
        field.on("keydown", function (e) {
            if (e.keyCode === 13) {
                $("#" + id).jsGrid("updateItem");
                return false;
            }
            else if (e.keyCode === 27) {

                $("#" + id).jsGrid("cancelEdit");
                return false;
            }
        });
    }  // isme change he
    function focusChange(field, id) {

        field.on("keydown", function (e) {
            if ((field.val() === "") && (e.keyCode === 13 || e.keyCode === 9)) {
                if (id === "jsGrid") {
                    newRow("transGrid")
                }
                else if (id === "transGrid") {
                    newRow("Grid")

                }
                else {
                    $("#create").focus()
                }
                return false;
            }
        });
    }
    function loadData() {
        $.ajax({
            type: "GET",
            url: "Product_Get_All",

            dataType: "json",
            success: function (d) {
                debugger
                items = d
                my()
                tax()
              //  trans()
                newRow("jsGrid")
                newRow("Grid")
            }
           
        });
        $.ajax({
            type: "GET",
            url: "COA_Get_All",

            dataType: "json",
            success: function (d) {
                debugger
                allexpences = d

                trans()

                newRow("expGrid")
            }
        });

    }
    function DetailCalculation(th, edit)
    {

        if (edit) {
            var quantity = parseFloat(th._grid.fields[3].editControl.val()) || 1;
            var price = parseFloat(th._grid.fields[4].editControl.val()) || 1;
            var discount = parseFloat(th._grid.fields[5].editControl.val()) || 0;
        //    var tax = parseFloat(th._grid.fields[6].editControl.val()) || 0;
            var total = (quantity * price)

            total -= total * (discount / 100);


           // total += total * (tax / 100);

            th._grid.fields[7].editControl.val(total)
        }


        else
        {
            var quantity = parseFloat(th._grid.fields[3].insertControl.val()) || 1;
            var price = parseFloat(th._grid.fields[4].insertControl.val()) || 1;
            var discount = parseFloat(th._grid.fields[5].insertControl.val()) || 0;
           // var tax = parseFloat(th._grid.fields[6].insertControl.val()) || 0;
            var total = (quantity * price)

            total -= total * (discount / 100);


        //    total += total * (tax / 100);

            th._grid.fields[7].insertControl.val(total)
        }

    }
    function my(){
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: false,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "Do you rete the client?",
            data: inputs,
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",
            invalidMessage: "Invalid data entered!",
            onRefreshed: function (args) {

             
            },
          
            onItemInserting: function (args) {

             //   args.item["Q_ID"] = Master_Id;
                args.item["action"] = 'I';
                args.item["Tax_Id"] = parseInt(args.item["Tax_Id"])
            

            },
            onItemUpdating: function (args) {
              //  args.item["Q_ID"] = Master_Id;
                args.item["action"] = 'U';
                args.item["Tax_Id"] = parseInt(args.item["Tax_Id"])
              


            },
            onItemDeleting  : function (args) {


              //  args.item["Q_ID"] = Master_Id;
                args.item["action"] = 'D';
        
            },
            fields: [
            {
                name: "P_ID", title: "Product", type: "select", width: 80, validate: "required", items: items, valueField: "Cat_ID", autosearch: true, textField: "Cat_Name",
                insertTemplate: function (value) {
                var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this,args);
                var th= this;

               focusChange($insertControl,"jsGrid");
                return this.insertControl;
            },
            editTemplate: function (args) {
                var $editControl = jsGrid.fields.select.prototype.editTemplate.call(this, args);
                var th = this;

                update_on_enter( $editControl,"jsGrid");

                return $editControl;
            }, },
            {name:"P_Desc", title: "Description", type: "text", width:  80, validate: "required"  ,
                editTemplate: function (args) {
                var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                update_on_enter( $editControl,"jsGrid");

                return $editControl;
                },
            },
            {
                name: "Quantity", title: "Quantity", type: "text", width: 80, validate: "required",
                insertTemplate: function () {
                    var $insertControl = jsGrid.fields.text.prototype.insertTemplate.call(this);
                    var th = this;
                    insert_on_enter($insertControl, "jsGrid");
                    return $insertControl;
                },
                editTemplate: function (args) {
                    var th = this;
                    var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this, args);
                    $editControl.on("keyup change", function () {
                       


                    });
                    update_on_enter( $editControl,"jsGrid");

                    return $editControl;
                },
            },
            { type: "control",
                editButton : false,
                itemTemplate: function(_, item) {
                    if(item.IsTotal)
                        return "";
                    return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                }}
            ]
        });

    };
    function tax() {
        $("#Grid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: false,
            inserting: false,
            deleting: false,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,

            data: outputs,

            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",

            invalidMessage: "Invalid data entered!",

            onItemInserting: function (args) {


               // args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'I';
                args.item["Q_ID"] = Master_Id;
                args.item["ST_ID"] = parseInt(args.item["ST_ID"])
                editedTax.push(args.item)
                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },

            onItemDeleting: function (args) {


                args.item["Q_ID"] = Master_Id;
                args.item["action"] = 'D';
                editedTax.push(args.item);
                //var grid = args.grid;
                //grid.data.splice(args.itemIndex, 1);
                //   grid.refresh();
                ////if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },

            onRefreshed: function (args) {

               //grand_total = Gross_total
               // var items = args.grid.option("data");
               // var total = { Name: "Total", "ST_Rate": "", "ST_Total": 0, IsTotal: true };

               // items.forEach(function (item) {



               //     total.ST_Total += parseFloat(item.ST_Total);
               // });

               // tax_total = total.ST_Total;
               // grand_total += tax_total;
               // grand_total = parseFloat(Gross_total + tax_total + trans_total).toFixed(2);
               // $("#Grand_Total").html('<h1 style="font-size:30px">Total: ' + grand_total + '</h1>')
               // total.ST_Total = parseFloat(total.ST_Total.toFixed(2));
               // var $totalRow = $("<tr>").addClass("total-row");

               // args.grid._renderCells($totalRow, total);

               // args.grid._content.append($totalRow);
            },

            fields: [
         
                       {
                           name: "P_ID", title: "Product", type: "select", width: 80, validate: "required", items: items, valueField: "Cat_ID", autosearch: true, textField: "Cat_Name",
                           insertTemplate: function (value) {
                               var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this,args);
                               var th= this;

                               focusChange($insertControl,"jsGrid");
                               return this.insertControl;
                           },
                           editTemplate: function (args) {
                               var $editControl = jsGrid.fields.select.prototype.editTemplate.call(this, args);
                               var th = this;

                               update_on_enter( $editControl,"jsGrid");

                               return $editControl;
                           }, },
                       {name:"P_Desc", title: "Description", type: "text", width:  80, validate: "required"  ,
                           editTemplate: function (args) {
                               var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                               update_on_enter( $editControl,"jsGrid");

                               return $editControl;
                           },
                       },
                       {
                           name: "Quantity", title: "Quantity", type: "text", width: 80, validate: "required",
                           insertTemplate: function () {
                               var $insertControl = jsGrid.fields.text.prototype.insertTemplate.call(this);
                               var th = this;
                               insert_on_enter($insertControl, "jsGrid");
                               return $insertControl;
                           },
                           editTemplate: function (args) {
                               var th = this;
                               var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this, args);
                               $editControl.on("keyup change", function () {
                       


                               });
                               update_on_enter( $editControl,"jsGrid");

                               return $editControl;
                           },
                       },
                       {
                           type: "control",
                           editButton: false,
                           itemTemplate: function (_, item) {
                               if (item.IsTotal)
                                   return "";
                               return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                           }
                       }
            ]
                

           

            

        });

    }
    var selectedDepartment1;
    var isMM = false;
    var isT = false;
    var mytrans = []
    function trans() {

        $("#expGrid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: false,
            inserting: false,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "confirm",
            data :expences,
      
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",
            invalidMessage: "Invalid data entered!",

            onItemInserting: function (args) {
            //    args.item["PI_ID"] = Master_Id;
             

                args.item["action"] = 'I';
                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemUpdating: function (args) {


              
                args.item["action"] = 'U';

              
            },
            onItemDeleting: function (args) {


             
                args.item["action"] = 'D';
               
            },
    
            fields: [


            {
                name: "COA_ID", title: "Account", type: "select", width: 100, validate: "required",
                items: allexpences, valueField: "COA_ID", textField: "COA_Name", valueType: "number",
                insertTemplate: function () {

                  
                    var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this);
                    focusChange($insertControl, "transGrid");
                    return $insertControl;



                },
            },
             {
                 name: "Description", title: "Description", type: "text", width: 50, insertcss: "abc2",
                 validate: "required",
           


             },

            {
                name: "Amount", title: "Amount", type: "text", width: 80, validate: "required", insertcss: "ttl",
                insertTemplate: function (value) {
                    this.insertControl = $("<input>");
                    insert_on_enter(this.insertControl, "transGrid");
                    return this.insertControl;
                },

            },
   
            {
                type: "control", width: 20, editButton: false,
                itemTemplate: function (_, item) {

                    if (item.IsTotal)
                        return "";
                    return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                }
            }

            ]

        });

    }
</script>