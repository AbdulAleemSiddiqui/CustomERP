@model SfDesk.Models.Expense

@{
    ViewBag.Title = "Master";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}
<style>
    

</style>

<div class="card alert">
    <div class="card-header">
        <div class="card-body">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h2>Expenses</h2>
                    <hr />
                    @Html.HiddenFor(model => model.Ex_ID, new { htmlAttributes = new { @class = "form-control" } })


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-lg-12">
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.COA_ID, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9" style="padding-left: 20px;">
                                @Html.HiddenFor(Model => Model.COA_ID)
                                <input type="text" name="COA_Name" list="COA_List" id="COA_Name" class="form-control text-box ">
                                <datalist id="COA_List">

                                    @foreach (var item in   ViewBag.COA)
                                    {
                                        <option id="@item.COA_ID" data-id="@item.COA_ID" value="@item.COA_Name"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.COA_ID, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group col-md-3" >
                            @Html.LabelFor(model => model.Ex_NO, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9"  style="padding-left: 20px;">
                                @Html.EditorFor(model => model.Ex_NO, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.Ex_NO, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9" style="padding-left: 20px;">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control tbDate",@type= "text" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-3">
                            @Html.Label("Contact", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9" style="padding-left: 20px;">
                                @Html.HiddenFor(Model => Model.Contact_ID)
                                @Html.HiddenFor(Model => Model.Contact_Table)
                                <input type="text" name="Contact_Name" list="Contact_List" id="Contact_Name" class="form-control text-box ">
                                <datalist id="Contact_List">

                                    @foreach (var item in ViewBag.Contacts)
                                    {
                                        <option id="@item.Contact_ID" data-id="@item.Contact_ID" data-value="@item.Contact_Table" value="@item.Contact_Name - @item.Contact_Table"></option>
                                    }
                                </datalist>    
                                @Html.ValidationMessageFor(model => model.Contact_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9" style="padding-left: 20px;">
                                @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div id="child"></div>
                    <div class="col-md-8">
                    <div class="form-group ">
    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-9">
        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Img_Path, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Img_Path, new { htmlAttributes = new { @class = "form-control",@type="File" } })
        @Html.ValidationMessageFor(model => model.Img_Path, "", new { @class = "text-danger" })
    </div>
</div></div>
                
                        <div class="col-lg-4">
                            <label class="col-lg-4 col-form-label label-font" for="grossAmount">Gross</label>
                                <div class="col-lg-8 input-group input-group-sm">
                                    <label class="col-form-label label-font" for="grossAmount" id="grossAmount" style="float:right">0.00</label>
                                    
                                </div>
                        
                            
                            <label class="col-lg-4 col-form-label label-font" for="taxAmount">Tax</label>
                            <div class="col-lg-8 input-group input-group-sm">
                                <label class="col-form-label label-font" for="taxAmount" id="taxAmount" style="float:right">0.00</label>
                         
                                </div>
                          
                            <hr style="border: 1px solid  silver" />
                                <label class="col-lg-4 col-form-label net-amount" for="netAmount"><b>Net (<span currency-symbol="">PKR</span>)</b></label>
                            <div class="col-lg-8 input-group input-group-sm">
                                <label class="col-form-label label-font" for="netAmount" id="netAmount" style="float:right"><b>0.00</b></label>
                                </div>
                           
                        </div>
                
                   

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" id="create" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
@section scripts
{

    <script src="~/assets/js/TypableDropdown.js"></script>
    <script src="~/assets/js/jsgrid.min.js"></script>
    <script>
        var Gross_total = 0;
        var tax_total = 0;
        var grand_total = 0;
        var items = @Html.Raw(Json.Encode(ViewBag.COA));
        $(window).load(function () {

            detail()
            $('.tbDate').datepicker({ dateFormat: "dd-mm-yy" })
            $('.tbDate').val("DD-MM-YY");
            var date = new Date();
            var formatted_date = date.getDate() + "-" + (date.getMonth()+1) + "-" + date.getFullYear()
            $(".tbDate").val(formatted_date);
            DropDown_Fill("COA");
           
            

        });
        $(document).ready(function () {   // Help for the HTML4 version.
            //$('.tbDate').prop("readonly", true);
            //$('.tbDate').datepicker()

            //var today = new Date();
            //var dd = String(today.getDate()).padStart(2, '0');
            //var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            //var yyyy = today.getFullYear();

            //today = mm + '/' + dd + '/' + yyyy;
            //$('#AD').val(today);




            Typable_Dropdown('COA'); 
            Typable_Dropdown_Custom('Contact');
           
          



        });

        $("#create").click(function (e) {
            e.preventDefault();

            var data = {};

            $('form').serializeArray().map(function (x) { data[x.name] = x.value; });
           
            data.details = details;
            data.Total = grand_total;
            //data.SO_Charges = mytrans;
            //data.SO_Taxs = Mytax
            //data.Total = grand_total;

            $.ajax({
                url: '@Url.Action("index", "Expense")',
                type: 'Post',
                dataType: 'json',
                data: {
                    c: data
                },
                success: function (data) {
                    window.location.href = '@Url.Action("Index", "Expense")';
                }

            });
        });



        /*ye master ka he*/
        function detail() {

            $.get('@Url.Action("detail", "expense")', function (data) { $("#child").html(data); });
            $("#done").hide()
    

        };
        function Typable_Dropdown_Custom( a)
        {
   
            var s = $('#' + a + '_List').find('option').length;
            if (s == 0)
            {
                $('#' + a + '_Name').val("No Data");
                $('#' + a + '_Name').prop('disabled', true);
            }
            $('select[name='+a+'_Name]').change(function () {
                debugger;

                $('input[name=other]').val($(this).val());
            });
            $('#' + a + '_Name').on('keydown', function (e) {
                if (e.keyCode === 9) {
                    var s = $(this).val();
                    var list=$('#' + a + '_List').find('option');
                    for (var i = 0; i < list.length; i++) {
                        var z = $(list[i]).val();
                        if (z.toLowerCase().indexOf(s.toLowerCase()) != -1) {
                            $(this).val($(list[i]).val());
                            break;
                        }
              
                    }
                }
            });

            $('#' + a + '_Name').on('change', function () {
                debugger;
                var value = $('#' + a + '_Name').val();
                var name = "#" + a + "_List";
                name = name + " option[value='" + value+ "']";
                value = $(name).data('id');
                var tbl = $(name).data('value');
                if (typeof value === "undefined") {
                    $('#' + a + '_Name').val("");
                    alert("Not Match");
                }
                $("[name='" + a + "_ID']").val(value);
                $("[name='" + a + "_Table']").val(tbl);
            });
    
        }
  </script>
   }