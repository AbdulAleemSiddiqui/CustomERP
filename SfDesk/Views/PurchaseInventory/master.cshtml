@model SfDesk.Models.PurchaseInventory

@{
    ViewBag.Title = "master";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}

@section scripts
{

    <script src="~/assets/js/jsgrid.min.js"></script>
    <script src="~/scripts/mydropdown.js" type="text/javacsript">
    </script>
    <script src="~/assets/js/db.js" type="text/javacsript">
    </script>
    <script>

        $('#myModal').on("hidden.bs.modal", function () {
            $("#myModalContent").html("")
        });
        $(document).ready(function () {   // Help for the HTML4 version.
            $('select[name=Account_Payable_Name]').change(function () {
                $('input[name=other]').val($(this).val());
            });

            $('select[name=Purchase_Account_Name]').change(function () {
                $('input[name=other]').val($(this).val());
            });
                //if (typeof (history.pushState) != "undefined") {
                //    window.history.pushState({}, 'PurchaseInventory', '/PurchaseInventory/master');

                //}
            //
            var g = $('#Transporter_ID').val();
                if (g != null) {
                    populate();

                }

        });
        $('#Account_Payable_Name').on('change', function () {
            var id = $("option").filter("[value='" + $('#Account_Payable_Name').val() + "']").data("id");
            $("[name='Account_Payable_ID']").val(id);
        });
        $('#Purchase_Account_Name').on('change', function () {
            var id = $("option").filter("[value='" + $('#Purchase_Account_Name').val() + "']").data("id");
            $("[name='Purchase_Account_ID']").val(id);
        });
        var Master_Id = 0;
        $("form").submit(function (e) {
            e.preventDefault();
            $.post(this.action, $(this).serialize(), function (data) {
                detail()
                ;
                Master_Id = data;
            })
            //$.ajax({
            //    url: this.action,
            //    type: 'Post',
            //    dataType: 'json',
            //    data: {
            //        c: $(this).serialize()
            //    },
            //    success: function (data) {
            //        detail()
            //    }

            //});
        });


        /*ye master ka he*/
        function detail() {

            $.get('@Url.Action("detail", "PurchaseInventory")', function (data) { $("#child").html(data); });
            $("#done").hide()
        };
        function AddSupplier() {
            $.get('@Url.Action("AddPartial", "Vendor")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        function AddTrans() {
            $.get('@Url.Action("Add", "Transporter")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        function AddVehicle() {
            var id = $('#Transporter_ID').val();
            if (id != 0) {
                $.get('@Url.Action("Add_Vehicle", "Transporter")' + '?id=' + id, function (data) { $("#myModalContent").html(data); });
                $('#myModal').modal('show');
            }
        };

        var id = 0;
        function populate() {
            id = $('#Transporter_ID').val()

            $.ajax({
                url: '/PurchaseInventory/Vehcile_Get_By_Transporter',
                type: 'GET',
                dataType: 'json',
                data: { id: id },
                success: function (d) {

                    var ddlState = $('#Vehicle_ID');
                    ddlState.empty();
                    $("#Vehicle_ID").prepend("<option value='' ></option>");// Clear the please wait
                    $.each(d, function (i, states) {
                        if ($('#V_ID').val() == states.V_ID) {
                            ddlState.append($("<option selected='selected'></option>").val(states.V_ID).html(states.Vehicle_Type));
                        }
                        else {
                            ddlState.append($("<option></option>").val(states.V_ID).html(states.Vehicle_Type));
                        }
                    });
                }
            });
        }
        $('#Transporter_ID').on("change", populate);

    </script>
}
<style>
    .form-group {
        padding: 0px;
        margin: 0px;
    }
</style>
<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Purchase</h4>
                    <hr />
                    <input hidden="hidden" name="PI_ID" id="PI_ID" value="@Model.PI_ID" />
                    <input hidden="hidden" name="V_ID" id="V_ID" value="@Model.Vehicle_ID"/>
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.PR_No, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PR_No, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"@*, @readonly = "readonly"*@ }
                           })
                                @Html.ValidationMessageFor(model => model.PR_No, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PO_No, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PO_No, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"@*, @readonly = "readonly"*@ }
                           })
                                @Html.ValidationMessageFor(model => model.PO_No, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice_No, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Invoice_No, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"@*, @readonly = "readonly"*@ }
                           })
                                @Html.ValidationMessageFor(model => model.Invoice_No, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Department_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Department_ID, new SelectList(new SfDesk.Models.Department().Department_Get_All(), "D_ID", "D_Name"), "select type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Department_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Purchase_Type_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">

                                @Html.DropDownListFor(model => model.Purchase_Type_ID, new SelectList(new SfDesk.Models.Purchase_Type().Purchase_Type_Get_All(), "PT_ID", "PT_Name"), "select type", htmlAttributes: new { @class = "form-control" })

                                @*    @Html.EditorFor(model => model.Customer_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Purchase_Type_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Account_Payable_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.Hidden("Account_Payable_ID")
                                <input type="text" name="Account_Payable_Name" list="Account_Payable_List" id="Account_Payable_Name" class="form-control text-box">
                                <datalist id="Account_Payable_List">
                                    @{     
                                        SfDesk.Models.ChartOfAccount selected = null;
                                        List<SfDesk.Models.ChartOfAccount> ab = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                        ab = ab.FindAll(x => x.Group_ID == 20);
                                    }

                                    @foreach (var item in ab)
                                    {
                                        <option data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                        if (item.COA_ID == Model.Account_Payable_ID)
                                        {
                                            selected = item;


                                        }
                                    }

                                </datalist>
                                <script src="~/assets/js/lib/jquery.min.js"></script>
                               <script src="~/scripts/mydropdown.js"  type="text/javascript">
                                   $(function(){valueSelect(@ab.IndexOf(selected),"Account_Payable_Name");})</script>
                                @*   @Html.DropDownListFor(model => model.Account_Payable_ID, new SelectList(new SfDesk.Models.ChartOfAccount().COA_Get_All_For_Account_Payable(), "COA_ID", "COA_Name"), "select type", htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.Account_Payable_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Purchase_Account_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.Hidden("Purchase_Account_ID")
                                <input type="text" name="Purchase_Account_Name" list="Purchase_Account_List" id="Purchase_Account_Name" class="form-control text-box">
                                <datalist id="Purchase_Account_List">
                                    @{

                                        ab = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                        ab = ab.FindAll(x => x.Group_ID == 2 || x.Group_ID == 5 || x.Group_ID == 4 || x.Group_ID == 24);
                                    }

                                    @foreach (var item in ab)
                                    {
                                        <option data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                        if (item.COA_ID == Model.Purchase_Account_ID)
                                        {
                                            selected = item;


                                        }
                                    }

                                </datalist>
                                <script src="~/assets/js/lib/jquery.min.js"></script>
                                <script src="~/scripts/mydropdown.js"  type="text/javascript"> 
                                    $(function(){valueSelect(@ab.IndexOf(selected),"Sales_AccounName";})</script>






                                @* @Html.DropDownListFor(model => model.Purchase_Account_ID, new SelectList(new SfDesk.Models.ChartOfAccount().COA_Get_All_For_Purchase_Account(), "COA_ID", "COA_Name"), "select type", htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.Purchase_Account_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Suplier_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Suplier_ID, new SelectList(new SfDesk.Models.Vendor().Vendor_Get_All_For_Lov(), "Vendor_ID", "Business_Name"), "select type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Suplier_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                <button type="button" class="btn mini btn-primary" onclick="AddSupplier()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6" style="text-align:right">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Due_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Due_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Due_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Transporter_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Transporter_ID, new SelectList(new SfDesk.Models.Transporter().Transporter_Get_All(), "T_ID", "Trading_Name"), "select type", htmlAttributes: new { @class = "form-control" })

                                @*  @Html.EditorFor(model => model.Transporter_ID, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Transporter_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn mini btn-primary" onclick="AddTrans()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Vehicle_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Vehicle_ID, new SelectList(new List<string>()), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Vehicle_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2" @*style="display:none"*@>
                                <button type="button" class="btn mini btn-primary" onclick="AddVehicle()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.Middle_Man_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Middle_Man_ID, new SelectList(new SfDesk.Models.MiddleMan().MiddleMan_Get_All(), "MM_ID", "Trading_Name"), "select type", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Middle_Man_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-6">
                            <input type="submit" value="Create" class="btn btn-default" id="done" />
                        </div>
                    </div>
                </div>
                                            }

            <div id="child"></div>
        </div>
    </div>
</div>

<div id='myModal' class='modal'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:auto;height:80%">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div id='myModalContent'>

            </div>
        </div>
    </div>

</div>  
