@model SfDesk.Models.GDN

@{
    ViewBag.Title = "Master";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}

<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>GDN</h4>
                    <hr />
                    <input hidden="hidden" name="SO_ID" id="SO_ID" value="@Model.SO_ID" />
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group ">
                            @Html.LabelFor(model => model.Customer_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Customer_ID)
                                <input type="text" name="Customer_Name" list="Customer_List" id="Customer_Name" class="form-control text-box">
                                <datalist id="Customer_List">
                                    @{
                                        var Customer_List = new SfDesk.Models.Customer().Customer_Get_All(SfDesk.Models.App.App_ID);
                                    }

                                    @foreach (var item in Customer_List)
                                    {
                                        <option id="@item.Customer_ID" data-id="@item.Customer_ID" value="@item.Business_Name"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.GDN_NO, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.GDN_NO, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"
                               }
                           })
                                @Html.ValidationMessageFor(model => model.GDN_NO, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Store_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Store_ID)
                                <input type="text" name="Salesman_Name" list="Salesman_List" id="Salesman_Name" class="form-control text-box">
                                <datalist id="Salesman_List">
                                    @{
                                        var Salesman_List = new SfDesk.Models.SalesMan().SalesMan_Get_All(SfDesk.Models.App.App_ID);
                                    }

                                    @foreach (var item in Salesman_List)
                                    {
                                        <option id="@item.S_ID" data-id="@item.S_ID" value="@item.Trading_Name"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Store_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2" style="display:none">
                                <button type="button" class="btn mini btn-primary" onclick="AddSM()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="form-group ">
                            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Currency)
                                <input type="text" name="Customer_Name" list="Customer_List" id="Customer_Name" class="form-control text-box">
                                <datalist id="Curr_List">
                                    @{
                                        var Curr_List = new List<string>();
                                        Curr_List.Add("pkr");
                                        Curr_List.Add("inr");
                                        Curr_List.Add("USD");
                                    }

                                    @foreach (var item in Curr_List)
                                    {
                                        <option id="@item" data-id="@item" value="@item"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group ">
                            @Html.LabelFor(model => model.Branch_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Branch_Name)
                                <input type="text" name="Branch_Name" list="Customer_List" id="Branch_Name" class="form-control text-box">
                                <datalist id="Branch_List">
                                    @{
                                        var Branch_List = new List<string>();
                                        Branch_List.Add("brccva");
                                        Branch_List.Add("ss");
                                        Branch_List.Add("dsad");
                                    }

                                    @foreach (var item in Branch_List)
                                    {
                                        <option id="@item" data-id="@item" value="@item"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="col-md-6" style="text-align:right">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                 
                        <div class="form-group">
                            @Html.LabelFor(model => model.AttachmentPath, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.AttachmentPath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AttachmentPath, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Transporter_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Transporter_ID)
                                <input type="text" name="Transporter_Name" list="Transporter_List" id="Transporter_Name" class="form-control text-box">
                                <datalist id="Transporter_List">
                                    @{
                                        var Transporter_List = new SfDesk.Models.Transporter().Transporter_Get_All();
                                    }

                                    @foreach (var item in Transporter_List)
                                    {
                                        <option id="@item.T_ID" data-id="@item.T_ID" value="@item.Trading_Name"></option>
                                    }
                                </datalist>
                                @Html.ValidationMessageFor(model => model.Transporter_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn mini btn-primary" onclick="AddTrans()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Vehicle_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.DropDownListFor(model => model.Vehicle_ID, new SelectList(new List<string>()), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Vehicle_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2" @*style="display:none"*@>
                                <button type="button" class="btn mini btn-primary" onclick="AddVehicle()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                


                    <div id="child"></div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ShippingAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />

                    <div class="form-group">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6">
                                <input type="button" value="Save and Exit" class="btn btn-default" id="create" />
                                <input type="button" value="Approved and Exit" class="btn btn-default" id="approve" />
                                <input type="button" value="Cancel" class="btn btn-default" id="cancel" />
                                <input type="button" value="Reject" class="btn btn-default" id="reject" />
                            </div>
                        </div>


                    </div>
                </div>

                                        }

        </div>
    </div>
</div>

@section scripts
{

    <script src="~/assets/js/jsgrid.min.js"></script>
    <script src="~/assets/js/TypableDropdown.js"></script>
    <script src="~/assets/js/db.js">
    </script>
    <script>
        DropDown_Fill("Customer");
        Typable_Dropdown('Customer');
        $(document).ready(function () {

            $.get('@Url.Action("detail", "gdn")', function (data) { $("#child").html(data); });

         
           
            $('#Transporter_Name').on("change", populate);
        });
        $('#myModal').on("hidden.bs.modal", function () {
            $("#myModalContent").html("")
        });
        function populate() {
            debugger;
            var value = $('#Transporter_Name').val();
            var name = "#Transporter_List";
            name = name + " option[value='" + value + "']";
            value = $(name).data('id');
            $('#Transporter_ID').val(value);
            id = $('#Transporter_ID').val()

            $.ajax({
                url: '/PurchaseInventory/Vehcile_Get_By_Transporter',
                type: 'GET',
                dataType: 'json',
                data: { id: id },
                success: function (d) {

                    var ddlState = $('#Vehicle_ID');
                    ddlState.empty();
                    $("#Vehicle_ID").prepend("<option value='' ></option>");// Clear the please wait
                    $.each(d, function (i, states) {
                        if ($('#V_ID').val() == states.V_ID) {

                            ddlState.append($("<option selected='selected'></option>").val(states.V_ID).html(states.Vehicle_Type));
                        }
                        else {
                            ddlState.append($("<option></option>").val(states.V_ID).html(states.Vehicle_Type));
                        }
                    });
                }
            });
        }

        $("form").submit(function (e) {
            e.preventDefault();
            $.post(this.action, $(this).serialize(), function (data) {
                debugger;
                window.location.href = '@Url.Action("Master", "Payment")';

            })

        })


    </script>
}