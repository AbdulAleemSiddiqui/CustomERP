
@model  IEnumerable<SfDesk.Models.GRN>


@{
    Layout = null;
}
<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<style>
    .total-row td {
        border-top: 2px solid #efefef;
    }
</style>
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert">
                <div class="jsgrid-table-panel">

                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>
             
                </div>
                <!-- /# card -->
            </div>
            <!-- /# column -->
        </div>
    </div>
</div>
<script>

    var CO=[]
    $(document).ready(function () {


         CO =@Html.Raw(Json.Encode(Session["COA"]));
     my();


    });
    function my()
    {
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: true,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "confirm",
            data: [],
            controller: {
                updateItem: function (insertingClient) {
                    debugger
                    details.push(insertingClient);

                },
                insertItem: function (insertingClient) {
                    debugger
                    details.push(insertingClient);

                },
                deleteItem: function (deletingClient) {
                    details.pop(insertingClient);

                }
            },
                pagerContainer: null,
                pageIndex: 1,
                pageSize: 20,
                pageButtonCount: 15,
                pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
                pagePrevText: "Prev",
                pageNextText: "Next",
                pageFirstText: "First",
                pageLastText: "Last",
                pageNavigatorNextText: "...",
                pageNavigatorPrevText: "...",
                //onRefreshed: function(args) {
                //    var items = args.grid.option("data");
                //    debugger;
                //    totalamount = 0;
                //    items.forEach(function(item) {
                //        totalamount += parseFloat(item.Amount);

                //    });

                //},
                invalidMessage: "Invalid data entered!",



                fields: [

                {name:"Item_Code", title: "Item_Code", type: "number", width:  80, validate: "required" },
                {name:"Product_Name", title: "Product_Name", type: "text", width:  80, validate: "required" },
                
              { name: "DESCRIPTION", title: "DESCRIPTION", type: "text", width: 80, validate: "required" },

              { name: "UNIT", title: "UNIT", type: "text", width: 80, validate: "required" , css: "totalAmount" },
 { name: "QTY", title: "QTY", type: "text", width: 80, validate: "required" , css: "totalAmount" },
 { name: "RATE", title: "RATE", type: "text", width: 80, validate: "required" , css: "totalAmount" },
 { name: "AMOUNT", title: "AMOUNT", type: "text", width: 80, validate: "required" , css: "totalAmount" },
 { name: "TAX", title: "TAX",  width: 80, validate: "required" , css: "totalAmount",
 itemTemplate: function(value, item) {
     return $("<input>").attr("type", "checkbox")
             .attr("checked", value || item.Checked)
         .on("change", function() {
             item.Checked = $(this).is(":checked");
         });
 }

 },
  {
      name: "LOCATION", title: "LOCATION", type: "select", width: 80, validate: "required",
      items: CO, valueField: "COA_ID", textField: "COA_Name",

  },

                {
                    type: "control",
                    itemTemplate: function (_, item) {


                        return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                    }
                }

                ]

            });
    }
</script>

