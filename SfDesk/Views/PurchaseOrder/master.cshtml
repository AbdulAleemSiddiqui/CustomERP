@model SfDesk.Models.PO

@{
    ViewBag.Title = "master";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}
<style>
    .form-group {
        padding: 0px;
        margin: 0px;
    }
</style>
<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Purchase</h4>
                    <hr />
                    @*<input hidden="hidden" name="PI_ID" id="PI_ID" value="@Model.PI_ID" />*@
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
                        <div class="form-group">
                            @Html.LabelFor(model => model.PO_No, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PO_No, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"}
                           })
                                @Html.ValidationMessageFor(model => model.PO_No, "", new { @class = "text-danger" })
                            </div>
                        </div>

               
                        <div class="form-group">
                            @Html.HiddenFor(Model => Model.Item_Type_ID)
                            @Html.LabelFor(model => model.Item_Type_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            @{
                                var list = new SfDesk.Models.Item_Category().Item_Category_Get_All();
                            }
                            <div class="col-md-5">
                                <input type="text" name="Item_Type_Name" list="Item_Type_List" id="Item_Type_Name"  autocomplete="off"  class="form-control text-box">
                                <datalist id="Item_Type_List">

                                    @foreach (var item in list)
                                    {
                                        <option id="@item.IC_ID'" data-id="@item.IC_ID" value="@item.IC_Name"></option>
                                    }
                                </datalist>
                                @Html.ValidationMessageFor(model => model.Item_Type_ID, "", new { @class = "text-danger" })
                            </div>
                        </div>
           
                      



                        <div class="form-group">
                            @Html.LabelFor(model => model.Suplier_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Suplier_ID)
                                <input type="text" name="Suplier_Name" list="Suplier_List" id="Suplier_Name" class="form-control text-box">
                                <datalist id="Suplier_List">
                                    @{
                                        var Supplier_List = new SfDesk.Models.Vendor().Vendor_Get_All();
                                    }

                                    @foreach (var item in Supplier_List)
                                    {
                                        <option id="@item.Vendor_ID" data-id="@item.Vendor_ID" value="@item.Business_Name"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Suplier_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                <button type="button" class="btn mini btn-primary" onclick="AddSupplier()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Advance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Advance, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"
                               }
                           })
                                @Html.ValidationMessageFor(model => model.Advance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6" style="text-align:right">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                <input id="Date" name="Date" type="text" class="form-control tbDate" />
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text -danger" })
                            </div>
                        </div>
                       

                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>

                


                        <div class="form-group">
                            @Html.LabelFor(model => model.Middle_Man_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Middle_Man_ID)
                                <input type="text" name="Middle_Man_Name" list="Middle_Man_List" id="Middle_Man_Name" class="form-control text-box">
                                <datalist id="Middle_Man_List">
                                    @{
                                        var Middle_Man_List = new SfDesk.Models.MiddleMan().MiddleMan_Get_All();
                                    }

                                    @foreach (var item in Middle_Man_List)
                                    {
                                        <option id="@item.MM_ID" data-id="@item.MM_ID" value="@item.Trading_Name"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Middle_Man_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2" @*style="display:none"*@>
                                <button type="button" class="btn mini btn-primary" onclick="AddMM()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">

                                <input type="file" id="PI_Image" accept=".jpg,.jpeg,.png" onclick='ValidateSize(this);' />


                            </div>

                        </div>
                    </div>
                    <div id="child"></div>
                    <br />
                    <div class="form-group">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6">
                                <input type="button" value="Save and Exit" class="btn btn-default" id="create" />
                                <input type="button" value="Approved and Exit" class="btn btn-default" id="approve" />
                                <input type="button" value="Cancel" class="btn btn-default" id="cancel" />
                                <input type="button" value="Reject" class="btn btn-default" id="reject" />
                            </div>
                        </div>


                    </div>
                </div>
            }

          
        </div>
    </div>
</div>
<div id='myModal' class='modal'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:auto;height:80%">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div id='myModalContent'>

            </div>
        </div>
    </div>

</div>  
@section scripts
{

<script src="~/assets/js/TypableDropdown.js"></script>
<script src="~/assets/js/jsgrid.min.js"></script>
<script src="~/assets/js/db.js">

</script>
    <script>
        var mytrans = []
        var myOpts = []
        var Master_Id = 0;
        $('#PI_Image').bind('change', function () {
            //this.files[0].size gets the size of your file.
            var size = this.files[0].size / 1024 / 1024;
            if (size > 1) {
                alert('File size exceeds 2 MB');
                $('#PI_Image').val(null);
            }
        });
        $(window).load(function () {
            detail();
            if ($('#PI_ID').val() != 0) {
                debugger;
              
                DropDown_Fill("Item_Type");
             
                DropDown_Fill("Suplier");
                DropDown_Fill("Middle_Man");
                Master_Id = $('#PI_ID').val();

            }


            $('#myModal').on("hidden.bs.modal", function () {
                $("#myModalContent").html("")
            });

        })
        $(document).ready(function () {
            $('.tbDate').datepicker({ dateFormat: "dd-mm-yy" })
            $('.tbDate').prop("readonly", true);
            $('.tbDate').val("DD-MM-YY");
            var date = new Date();
            var formatted_date = date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear()

            $("#ADate").val(formatted_date);

            //Customer Js file which makes dropdown typable
           
            Typable_Dropdown('Item_Type');
     

            Typable_Dropdown('Suplier');
            Typable_Dropdown('Middle_Man');
            //var g = $('#Transporter_ID').val();
            //if (g != "") {
            //    populate();

            //}

        });

        var Master_Id = 0;


        $('#cancel').click(function () {
            window.location.href = '/User/Index/';
        });
        $('#approve').click(function () {
            debugger;
            @*$.post('@Url.Action("Approve", "PurchaseOrder")', $('form').serialize(), function (data) {
                window.location.href = '@Url.Action("ShowAll", "PurchaseOrder")';
            })*@
            var data = {};
            $('form').serializeArray().map(function (x) { data[x.name] = x.value; });
            data.details = clients;
            data.transactions = myTransaction;
            data.taxes = myTaxes;
            $.ajax({
                url: '@Url.Action("Approve", "PurchaseOrder")',
                type: 'Post',
                dataType: 'json',
                data: {
                    c: data,
                },
                success: function (data) {
                    window.location.href = '@Url.Action("ShowAll", "PurchaseOrder")';
                }

            });
        })

        $("#create").click(function (e) {
            e.preventDefault();
            @*$.post(this.action, $(this).serialize(), function (data) {
                detail()
                debugger;
                Master_Id = data;
                window.location.href = '@Url.Action("ShowAll", "PurchaseOrder")';

            });*@
            var data = {};
            $(this).serializeArray().map(function (x) { data[x.name] = x.value; });
            data.details = clients;
            data.transactions = myTransaction;
            data.taxes = myTaxes;
            $.ajax({
                url: 'master',
                type: 'Post',
                dataType: 'json',
                data: {
                    c: data,
                },
                success: function (data) {
                    window.location.href = '@Url.Action("ShowAll", "PurchaseOrder")';
                }

            });
        });

        $('#myModal').on("hidden.bs.modal", function () {
            $("#myModalContent").html("")
        });
        /*ye master ka he*/
        function detail() {

            $.get('@Url.Action("detail", "PurchaseOrder")', function (data) { $("#child").html(data); });
            $("#done").hide()
        };
        function AddSupplier() {
            $.get('@Url.Action("AddPartial", "Vendor")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        @*function AddTrans() {
            $.get('@Url.Action("Add", "Transporter")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };*@
        function MM() {
            $.get('@Url.Action("Add", "middleman")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        @*function AddVehicle() {
            var id = $('#Transporter_ID').val();
            if (id != 0) {
                $.get('@Url.Action("Add_Vehicle", "Transporter")'+'?id='+id , function (data) { $("#myModalContent").html(data); });
                $('#myModal').modal('show');
            }
        };*@

        var id = 0;
        //function populate() {
        //    debugger;
        //    var value = $('#Transporter_Name').val();
        //    var name = "#Transporter_List";
        //    name = name + " option[value='" + value + "']";
        //    value = $(name).data('id');
        //    $('#Transporter_ID').val(value);
        //    id = $('#Transporter_ID').val()


        //    $.ajax({
        //        url: '/PurchaseRequisition/Vehcile_Get_By_Transporter',
        //        type: 'GET',
        //        dataType: 'json',
        //        data: { id: id },
        //        success: function (d) {

        //            var ddlState = $('#Vehicle_ID');
        //            ddlState.empty();
        //            $("#Vehicle_ID").prepend("<option value='' ></option>");// Clear the please wait
        //            $.each(d, function (i, states) {
        //                if ($('#V_ID').val() == states.V_ID)
        //                {
        //                    ddlState.append($("<option selected='selected'></option>").val(states.V_ID).html(states.Vehicle_Type));
        //                }
        //                else {
        //                    ddlState.append($("<option></option>").val(states.V_ID).html(states.Vehicle_Type));
        //                }
        //            });
        //        }
        //    });
        //}
        //$('#Transporter_Name').on("change", populate);

</script>
}