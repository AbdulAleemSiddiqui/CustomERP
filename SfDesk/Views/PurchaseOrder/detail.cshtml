
<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<style>
    .total-row td {
        border-top: 2px solid #efefef;
    }
</style>
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert">
                <div class="jsgrid-table-panel">
                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>
                    <br />

                    @*<div id="tax" style="float:right">
                            <form action="/PurchaseInventory/Save_Charges" method="post" id="charges_form">
                                <table border="1" style="table-layout: fixed; width: 20%;float:right">
                                    <tr>
                                        <th style="width: 200px">Charges</th>
                                        <th style="width:80px">Percent</th>
                                        <th style="width: 150px">Total</th>
                                    </tr>
                                    @{int i = 0; }
                                    @foreach (var item in new SfDesk.Models.PI_Charge().PI_Charge_Default_List())
                                    {
                                        <tr>
                                            <td style="width: 200px">
                                                <input name="charges[@i].Charge_Name" value="@item.Charge_Name" hidden="hidden" />
                                                <label>@item.Charge_Name</label>
                                            </td>
                                            <td style="width: 80px">
                                                <input type="text" class="taxVal" name="charges[@i].Charge_Percent" onchange="total(this,'c_'+@i)" style="width:80px" placeholder="%" />
                                            </td>
                                            <td style="width:150px"><input id='c_@i' name="charges[@i].Charge_Total" readonly="readonly" style="width:150px" /></td>
                                        </tr>
                                        i++;
                                    }

                                    <tr>
                                        <td style="width: auto"><b>Total</b></td>
                                        <td style="width: auto"><b></b></td>
                                        <td style="width: auto"><label id="total">0</label></td>
                                    </tr>

                                </table>
                                <input type="submit" value="Save" class="btn btn-default" style="float:right" />
                            </form>
                        </div>*@

                </div>
                @*<div class="jsgrid-table-panel col-lg-5">
                    <h5>Charges</h5>

                    <div id="transGrid" class="table table-striped table-bordered dataTable no-footer" style="float:left"></div>

                </div>
                <div class="jsgrid-table-panel col-lg-5">
                    <h5>Taxes</h5>

                    <div id="Grid" class="table table-striped table-bordered dataTable no-footer" style="float:left"></div>

                </div>*@

                <div id="Grand_Total" class="col-lg-2" style="text-align:center"><h6></h6><br /><h1 style="font-size:30px">Total</h1></div>
                <!-- /# card -->

            </div>
            <!-- /# card -->
        </div>
        <!-- /# column -->
    </div>
</div>



@*  <script src="~/assets/js/db.js"></script>*@
<script>
     
      
   var clients = []
    
        var Gross_total=0;
        var  tax_total = 0;
        var  trans_total = 0;
        var grand_total =0;

   
        function newRow(id)
        {
            $("#"+id).jsGrid({ inserting: true });
            var tr = $("#"+id+" .jsgrid-insert-row").closest("tr");
            //if(id==="jsGrid"){
            //   var disble=tr.find("td:eq(0)")
            //   var txtdisabled=disble.find("input:eq(0)").attr("disabled", "disabled");
            //   disble=tr.find("td:eq(1)")
            //   disabled=disble.find("input:eq(0)").attr("disabled", "disabled");
             
            //}
            var td=tr.find("td:eq(0)")
            debugger


            inout=td.find("select:eq(0)")
            if(id==="jsgrid")
                var inout=td.find("input:eq(0)")
            var last =  $(tr).find('td:last').html('')
            $(inout).select().focus();
        } // // isme change he
        function insert_on_enter(field,id) {

            field.on("keydown", function(e) {
                debugger

                if(e.keyCode === 13 || e.keyCode === 9 ) {
                    $("#"+id).jsGrid("insertItem").done(function(){
                        $("#"+id).jsGrid("clearInsert");
                        newRow()
                    });

                    return false;
                }
            });
        }  // isme change he
        function update_on_enter(field,id) {
            field.on("keydown", function(e) {
                if(e.keyCode === 13 ){
                    $("#"+id).jsGrid("updateItem");
                    return false;
                }
                else if(e.keyCode === 27 )
                {

                    $("#"+id).jsGrid("cancelEdit");
                    return false;
                }
            });
        }  // isme change he
        function focusChange(field,id){
            debugger
            field.on("keydown", function(e) {
                if((field.val()==="") && (e.keyCode === 13 || e.keyCode === 9) ) {
                    if(id==="jsGrid"){
                        newRow("transGrid")
                    }
                    else if (id==="transGrid")
                    {
                        newRow("Grid")

                    }
                    else
                    {
                        $("#create").focus()
                    }
                    return false;
                }
            });
        }

        $(function () {
            $.ajax({
                type: "GET",
                url: "/PurchaseRequisition/Item_Get_All",
                dataType: "json",
                success: function (d) {

                    items = d;
                    my()
                    newRow("jsGrid")
                }
            });
            clients =array
           
           
            //var mmid = $('#Middle_Man_ID').val()
       
           
            //$.ajax({
            //    url: "MM_Get_By_ID",
            //    type: 'GET',
            //    dataType: 'json',
            //    data: { id :  mmid},
            //    success: function (d) {   ;
            //        myOpts = d;
            //    }
            //});

            //$("#Middle_Man_Name").on("change",function(){

            //    var mmid = $('#Middle_Man_ID').val()
            //    $.ajax({
            //        url: "MM_Get_By_ID",
            //        type: 'GET',
            //        dataType: 'json',
            //        data: { id :  mmid},
            //        success: function (d) {   ;
            //            myOpts = d;
            //        }
            //    });
            //});
            //$("#Vehicle_ID").on("change",function(){
            //    var vid = $('#Vehicle_ID').val();
            //    $.ajax({
            //        url: "Vehicle_Get_BY_ID",
            //        type: 'GET',
            //        dataType: 'json',
            //        data: { id : vid },
            //        success: function (d) {   ;
            //            mytrans = d;
            //        }
            //    });
            //});
            //$.ajax({
            //    url: "Vehicle_Get_BY_ID",
            //    type: 'GET',
            //    dataType: 'json',
            //    data: { id : vid },
            //    success: function (d) {   ;
            //        mytrans = d;
            //    }
            //});
       
        })

        function my(){
            $("#jsGrid").jsGrid({
                height: "auto",
                width: "100%",
                filtering: false,
                editing: true,
                inserting: false,
                sorting: true,
                paging: true,
                autoload: true,
                pageSize: 15,
                pageButtonCount: 5,
                deleteConfirm: "Do you rete the client?",
                data: array,
                pagerContainer: null,
                pageIndex: 1,
                pageSize: 20,
                pageButtonCount: 15,
                pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
                pagePrevText: "Prev",
                pageNextText: "Next",
                pageFirstText: "First",
                pageLastText: "Last",
                pageNavigatorNextText: "...",
                pageNavigatorPrevText: "...",
                invalidMessage: "Invalid data entered!",
                onRefreshed: function(args) {
                    grand_total=Gross_total
                    var items = args.grid.option("data");
                    var total = { Name: "Total", "Rate":0,"Gross_Amount": 0,"Purchase_Quantitiy":0, IsTotal: true };

                    items.forEach(function(item) {
                        total.Rate += parseFloat(item.Rate);
                        total.Gross_Amount += parseFloat(item.Gross_Amount);
                        total.Purchase_Quantitiy += parseFloat(item.Purchase_Quantitiy);

                    });
                    total.Rate = parseFloat(total.Rate.toFixed(2));
                     var $totalRow = $("<tr>").addClass("total-row");
                     Gross_total = total.Gross_Amount
                     grand_total=parseFloat( Gross_total+tax_total+trans_total).toFixed(2);
                    $("#Grand_Total").html('<h1 style="font-size:30px">PKR <br/> '+grand_total +'</h1>')
                    args.grid._renderCells($totalRow, total);
                    debugger;
                    $totalRow.find("td").eq(0).html("<b>Total</b>");
                    $totalRow.find("td").eq(0).attr('colspan',3);
                    $totalRow.find("td").eq(1).remove();
                    $totalRow.find("td").eq(1).remove();
                    $totalRow.find("td").eq(0).css('text-align','right');

                    args.grid._content.append($totalRow);
                },
                fields: [
              
                       {
                           name: "Item_ID", title: "Code", type: "select", width: 80, validate: "required", items: items, valueField: "Item_ID", textField: "Item_Code",
                           insertTemplate: function (value) {
                               var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this, args);
                               var th = this;
                               $insertControl.on("keyup change", function () {
                                   ;
                                   var p_Q = parseInt(this.value);
                                   th._grid.fields[1].insertControl.val(p_Q)//val(unit);
                               });
                               focusChange($insertControl);
                               return this.insertControl;
                           },
                           editTemplate: function (args) {
                               var $editControl = jsGrid.fields.select.prototype.editTemplate.call(this, args);
                               var th = this;

                               $editControl.on("keyup change", function () {

                                   ;
                                   var p_Q = parseInt(this.value);
                                   th._grid.fields[1].editControl.val(p_Q)//val(unit);
                               });
                               update_on_enter($editControl);

                               return $editControl;
                           },
                       },
                    {
                        name: "Item_ID", title: "Item Name", type: "select", width: 80, validate: "required", items: items, valueField: "Item_ID", textField: "Item_Name",
                        insertTemplate: function (value) {
                            var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this, args);
                            var th = this;
                            $insertControl.on("keyup change", function () {

                                var p_Q = parseInt(this.value);
                                th._grid.fields[0].insertControl.val(p_Q).trigger("change");
                            });
                            focusChange($insertControl);
                            return this.insertControl;
                        },
                        editTemplate: function (args) {
                            var $editControl = jsGrid.fields.select.prototype.editTemplate.call(this, args);
                            var th = this;

                            $editControl.on("keyup change", function () {

                                ;
                                var p_Q = parseInt(this.value);
                                th._grid.fields[0].editControl.val(p_Q).trigger("change");
                            });
                            update_on_enter($editControl);

                            return $editControl;
                        },
                    },

                {name:"Item_Description", title: "Product Description", type: "text", width:  80, validate: "required",editing: false  
        
                },
                {name:"PI_Qty", title: "PI Quantitiy", type: "number", width:  80,
                validate: "required",editing: false  ,

                    insertTemplate: function () {
                        var $insertControl = jsGrid.fields.text.prototype.insertTemplate.call(this);
                        var th= this;
                        $insertControl.on("keyup change", function () {

                     
                            var rate =  th._grid.fields[4].insertControl.val();

                      
                            var p_Q = this.value;
                            th._grid.fields[5].insertControl.val(p_Q)//val(unit);
                            
                         
                        });
                     
                        return $insertControl;
                    },
                
                },
                {name:"PO_Qty", title: "PO Quantity", type: "number", width:  60, validate: "required",
                    insertTemplate: function () {
                        var $insertControl = jsGrid.fields.text.prototype.insertTemplate.call(this);
                        insert_on_enter(this.insertControl,"jsGrid");
                        var th= this;
            
                                    
                        $insertControl.on("keyup", function () {

                  
                            
                        });
                        return $insertControl;
                    },
                    editTemplate: function (args) {
                        var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                        var th= this;
                        $editControl.on("keyup", function () {
                            var p_Q =  th._grid.fields[3].insertControl.val();

                     
                            var rate = this.value;
                            //$u.attr("disabled", "disabled");

                        
                            amount =th._grid.fields[5].insertControl.val(rate*p_Q);
                       
                          
                        });
                        update_on_enter($editControl,"jsGrid");
                        return $editControl;
                    },
                },
                {
               name: "Item_ID",
               title: "",
               type: "text",
               visible: false


           },
         
                {
                                name: "PI_ID",
                                title: "",
                                type: "text",
                                visible: false


               },
          {
              type: "control", width: 100, 
              itemTemplate: function (value, item) {
                  var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                  var $myButton = $("<button>").attr({
                      type: "button",
                      class: "btn-link"
                  }).click(function (e) {
                      $.get("Show_details", { id: item.PI_ID });
                          e.stopPropagation();
                      });
                  $myButton.append($("<i>").attr({ class: "ti-notepad" }))
                  $result = $result.add($myButton)
              
                  return $result
              }
          }
                ]

            });

        };
    

                 
</script>