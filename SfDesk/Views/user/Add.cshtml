@model SfDesk.Models.user

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}



<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                  
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.CompanyCode, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.CompanyCode, new SelectList(new SfDesk.Models.Company().Company_Get_All(), "Company_ID", "Company_Name"), new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserRoleID, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            <select class="form-control" data-val="true" data-val-number="The field Company must be a number." data-val-required="The Company field is required." id="UserRoleID" name="UserRoleID">
                                <option></option>
                            </select>
                           @* @Html.DropDownListFor(model => model.UserRoleID, new SelectList(new SfDesk.Models.Role().Role_Get_All(), "R_ID", "Name"), new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.UserRoleID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-3">
                            <button type="submit" class="btn btn-primary btn-rounded m-b-10 m-l-5">
                                Add User
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{

    <script>
                    $("form").submit(function (e) {
                        e.preventDefault();
                        $.post('ADD', $(this).serialize(), function () { document.location = '/user/index'; })

                    });
                    
                        $('#CompanyCode').on("change", function () {
                            var id = parseInt($(this).val());
                            var ddlState = $('#UserRoleID');
                            $.ajax({
                                url: 'Role_Get_By_Company',
                                type: 'GET',
                                dataType: 'json',
                                data: { id: id },
                                success: function (d) {

                                    ddlState.empty(); // Clear the please wait  
                                    $.each(d, function (i, states) {
                                        ddlState.append($("<option></option>").val(states.R_ID).html(states.Name));
                                    });
                                },
                                error: function () {
                                    alert('Error!');
                                }
                            });

                        })


    </script>
}