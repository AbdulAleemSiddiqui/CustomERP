@model SfDesk.Models.Recipe

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}
<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert" >
               
                <div>
                    <div class="col-sm-1" style="margin-top: 15px; width:10%">
                        <b>
                         select Product:
                         </b>
                   
                    </div>

                    <div class="col-sm-3 " style="padding-bottom:20px">
                        @Html.DropDownListFor(model => model.R_ID, new SelectList(new SfDesk.Models.Product().Product_Get_All(), "P_ID", "P_Name"), new { @class = "form-control", @id="Pid"})
                    </div>

                </div>
                



                <div class="jsgrid-table-panel">
                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>
                </div>
            </div>
            <!-- /# card -->
        </div>
        <!-- /# column -->
    </div>
</div>


@section scripts{

<script src="~/assets/js/jsgrid.min.js"></script>
 <script src="~/assets/js/db.js"></script>
<script>
      
   
   
    var unit = "";

    $(document).ready(function () {

        $("#Pid").on("change",function(){

            $(".jsgrid-insert-mode-button").click();
        });

        var ma = [{ "M_ID": 0, "M_Name": "", "M_Type": "" }]
        var start = 0;
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: true,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "Do you rete the client?",
            controller: db,
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",
            onOptionChanged: function () {
                var $result = jsGrid.fields.text.prototype.insertTemplate.call(this.fields[4]); // original input
                
                $result.val($("#Pid").val());
               
                return $result;
                
            },
            onItemInserted: function (args) {
                $(".jsgrid-insert-mode-button").click();
               
            },
            invalidMessage: "Invalid data entered!",

            fields: [

             {
                 name: "Type", title: "@Html.DisplayNameFor(m=>m.Type)",
                 type: "select",
                 items: [{ "name": "" }, { "name": "Material" }, { "name": "Contractor" }, { "name": "Pakaging Material" }],
                 valueField: "name", textField: "name",
                 insertcss: "department-insert",
                 insertTemplate: function () {
                     var teamField = this._grid.fields[1];
                     var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this);

                     $insertControl.on("change", function () {
                         var selectedDepartment = $(this).find('option:selected').text();

                         $.ajax({
                             type: "GET",
                             url: "/material/Material_GET_ALL",
                             dataType: "json",
                             data: { m: selectedDepartment },
                             success: function (d) {
                                 ma = d;
                                 var departmentTeam = d;
                                 departmentTeam.splice(0, 0, [{ "M_ID": 0, "M_Name": "", "M_Type": "" }])
                                 teamField.items = departmentTeam;
                                 var a = $(".abc")
                                 $(".abc").empty().append(teamField.insertTemplate())

                             }
                         });
                     });

                     return $insertControl;
                 },
             },
            {
                name: "M_Name", title: "@Html.DisplayNameFor(m=>m.M_Name)",
                type: "select",
                items: ma,
                valueField: "M_Name", textField: "M_Name",
                insertcss: "abc",

                insertTemplate: function () {
                    var UnitFields = this._grid.fields[2];
                    var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this);
                    

                    $insertControl.on("change", function () {
                        var $u = jsGrid.fields.text.prototype.insertTemplate.call(UnitFields);
                        var selectedDepartment = $(this).prop('selectedIndex')
                        unit = (ma[selectedDepartment].M_Unit);
                        $u.val(unit)//val(unit);
                        $u.text(unit)//val(unit);
                        var a = $(".unit").empty();

                        //$(".unit").val(unit)
                        //$(".unit").text(unit)
                        $(".unit").append($u);
                        a = $(".unit")

                    });

                   

                    return $insertControl;
                },
                   

            },


            {
                name: "Unit",
                title: "@Html.DisplayNameFor(m=>m.Unit)",
                type: "text", width: 80,
                validate: "required",
                insertcss: "unit",
            },
            { name: "Quantity", title: "@Html.DisplayNameFor(m=>m.Quantity)", type: "text", width: 80, validate: "required" },
             {
                 name: "P_ID", title: "@Html.DisplayNameFor(m=>m.P_ID)", type: "text", width: 30,
                

             },
                { type: "control" }
            ]
        });
        
    });

         

</script>

    }