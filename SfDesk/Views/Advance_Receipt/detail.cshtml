

<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<style>
    .total-row td {
        border-top: 2px solid #efefef;
    }
</style>
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert">
                <div class="jsgrid-table-panel">

                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>

                    <input type="checkbox" id="isTax" value="tax"> Tax Adjustment <br />
                    <div id="Grid" class="table table-striped table-bordered dataTable no-footer"></div>

                </div>
                <!-- /# card -->
            </div>
            <!-- /# column -->
        </div>
    </div>
</div>
<script>
    var arr = []
    var taxArr= []
    var CO=[]
    var clients =[]
    function newRow(id)
    {
        $("#"+id).jsGrid({ inserting: true });

        var tr = $("#"+id+" .jsgrid-insert-row").closest("tr");
        if(id==="jsGrid"){
            var disble=tr.find("td:eq(7)")
            var txtdisabled=disble.find("input:eq(0)").attr("disabled", "disabled");
        }
        var td=tr.find("td:eq(0)")



        inout=td.find("select:eq(0)")
        if(id==="jsgrid")
            var inout=td.find("input:eq(0)")
        var last =  $(tr).find('td:last').html('')
        $(inout).select().focus();
    } // // isme change he
    function insert_on_enter(field,id) {

        field.on("keydown", function(e) {


            if(e.keyCode === 13 || e.keyCode === 9 ) {
                $("#"+id).jsGrid("insertItem").done(function(){
                    $("#"+id).jsGrid("clearInsert");
                    newRow(id)
                });
                return false;
            }
        });
    }  // isme change he
    function update_on_enter(field,id) {
        field.on("keydown", function(e) {
            if(e.keyCode === 13 ){
                $("#"+id).jsGrid("updateItem");
                return false;
            }
            else if(e.keyCode === 27 )
            {

                $("#"+id).jsGrid("cancelEdit");
                return false;
            }
        });
    }  // isme change he
    function focusChange(field,id){

        field.on("keydown", function(e) {
            if((field.val()==="") && (e.keyCode === 13 || e.keyCode === 9) ) {
                if(id==="jsGrid"){
                    newRow("transGrid")
                }
                else if (id==="transGrid")
                {
                    newRow("Grid")

                }
                else
                {
                    $("#create").focus()
                }
                return false;
            }
        });
    }
    $(document).ready(function () {
        $("#Grid").hide()
        $('#isTax').change(function() {

            if(this.checked) {

                $.ajax({
                    type: "GET",
                    url: "Tax_adjustment",
                    dataType: "json",
                    success: function (d) {

                        if (d.ID != 0)
                            taxArr = d
                            tax();
                            newRow("Grid")
                    }
                });
            }
            $("#Grid").toggle('slow')

        });
        $.ajax({
            type: "GET",
            url: "Index",
            dataType: "json",
            success: function (d) {

                if (d.ID != 0)
                    arr = d

            }
        });
        CO =@Html.Raw(Json.Encode(Session["COA"]));

     my();
     newRow("jsGrid")

    });
    function my()
    {
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: false,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "Do you rete the client?",
            data: arr,
            //controller: db,
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",

            invalidMessage: "Invalid data entered!",
            onRefreshed: function(args) {



                var items = args.grid.option("data");
                var total = { Name: "Total", "Rate": "","": "","":0,"":0,Amount:0, IsTotal: true };

                items.forEach(function(item) {
                    total.Amount += parseFloat(item.Amount);
                });
                total.Amount = parseFloat(total.Amount.toFixed(2));
                var $totalRow = $("<tr>").addClass("total-row");


                args.grid._renderCells($totalRow, total);

                $totalRow.find("td").eq(0).html("<b>Total</b>");
                $totalRow.find("td").eq(0).attr('colspan',4);
                $totalRow.find("td").eq(0).css('text-align','right');
                $totalRow.find("td").eq(1).remove();
                $totalRow.find("td").eq(1).remove();
                $totalRow.find("td").eq(1).remove();
                args.grid._content.append($totalRow);
            },

            onItemUpdated: function(args) {
                $('#jsGrid').jsGrid("refresh");
            },
            onItemInserting: function (args) {


                args.item["action"] = 'I';
                clients.push(args.item)
                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemUpdating: function (args) {


                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'U';
                clients.push(args.item)
                var tr = $("#jsGrid .jsgrid-insert-row").closest("tr");

                var disble=tr.find("td:eq(7)")
                var txtdisabled=disble.find("input:eq(0)").attr("disabled", "disabled");

                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemDeleting  : function (args) {


                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'D';
                clients.push(args.item);
                //var grid = args.grid;
                //grid.data.splice(args.itemIndex, 1);
                //   grid.refresh();
                ////if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },





                fields: [
  {
      name: "PaymentMode", title: "payment Mode", type: "select", width: 80, validate: "required",
      items: ["Cash", "cheque","Draft","Direct Deposit","Undeposited cheque"] ,
      insertTemplate: function () {
          var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this);
          var th= this;
          $insertControl.on("change", function () {
              debugger;
              var check = th._grid.fields[3];
              var selected = this.value;
              if(selected != "0")
              {
                  check.inserting = true;
              }
              else
              {
                  check.inserting = false;
              }
              var $check = jsGrid.fields.text.prototype.insertTemplate.call(check);

              var a = $(".check").empty();
              $(".check").append($check);
          });

          return $insertControl;
      },
      editTemplate: function (args) {
          var $editControl = jsGrid.fields.select.prototype.editTemplate.call(this,args);
          var th= this;
          $editControl.on("change", function () {
              var check = th._grid.fields[3];
              var selected = this.value;
              if(selected == "1")
              {
                  check.editing = true;
              }
              else
              {
                  check.editing = false;
              }
              var $check = jsGrid.fields.text.prototype.editTemplate.call(check);

              var a = $(".checke").empty();
              $(".checke").append($check);

          });
          update_on_enter($editControl,"jsGrid");
          return $editControl;
      },
  },
                {
                    name: "Account_ID", title: "Account", type: "select", width: 80, validate: "required",
                    items: CO, valueField: "COA_ID", textField: "COA_Name",
                    editTemplate: function (args) {
                        var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                        var th= this;
                        update_on_enter($editControl,"jsGrid");
                        return $editControl;
                    },

                },
                { name: "Description", title: "Description", type: "text", width: 80, validate: "required",
                editTemplate: function (args) {
                    var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                    var th= this;
                    update_on_enter($editControl,"jsGrid");
                    return $editControl;
                },},


              { name: "Bank_Name", title: "Bank_Name", type: "text", width: 80,editing: false,    inserting: false,insertcss:"check",editcss:"checke",
              editTemplate: function (args) {
                  var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                  var th= this;
                  update_on_enter($editControl,"jsGrid");
                  return $editControl;
              },
              },
              { name: "Instrument_NO", title: "Instument NO.", type: "text", width: 80,editing: false,    inserting: false,insertcss:"check",editcss:"checke",                editTemplate: function (args) {
                  var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                  var th= this;
                  update_on_enter($editControl,"jsGrid");
                  return $editControl;
              },},
              { name: "Instrument_Date", title: "Instument Date.", type: "text", width: 80,editing: false,    inserting: false,insertcss:"check",editcss:"checke",                editTemplate: function (args) {
                  var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                  var th= this;
                  update_on_enter($editControl,"jsGrid");
                  return $editControl;
              },},
              { name: "Amount", title: "Amount", type: "text", width: 80, validate: "required" , css: "totalAmount",
              insertTemplate: function () {

                  var $insertControl = jsGrid.fields.text.prototype.insertTemplate.call(this);

                  insert_on_enter($insertControl,"jsGrid");
                  return $insertControl;
              },
              editTemplate: function (args) {
                  var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                  var th= this;
                  update_on_enter($editControl,"jsGrid");
                  return $editControl;
              },},


                {
                    type: "control",
                    itemTemplate: function (_, item) {


                        return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                    }
                }

                ]

            });
    }
    function tax()
    {
        $("#Grid").jsGrid({
            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: false,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "Do you rete the client?",
            data: arr,
            //controller: db,
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",

            invalidMessage: "Invalid data entered!",

            onItemUpdated: function(args) {
                $('#jsGrid').jsGrid("refresh");
            },
            onItemInserting: function (args) {


                args.item["action"] = 'I';
                clients.push(args.item)
                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemUpdating: function (args) {


                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'U';
                clients.push(args.item)
                var tr = $("#jsGrid .jsgrid-insert-row").closest("tr");

                var disble=tr.find("td:eq(7)")
                var txtdisabled=disble.find("input:eq(0)").attr("disabled", "disabled");

                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemDeleting  : function (args) {


                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'D';
                clients.push(args.item);
                //var grid = args.grid;
                //grid.data.splice(args.itemIndex, 1);
                //   grid.refresh();
                ////if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },

            onRefreshed: function(args) {
                var items = args.grid.option("data");
                debugger;
                totalamount = 0;
                items.forEach(function(item) {
                    totalamount += parseFloat(item.Amount);

                });

            },
            invalidMessage: "Invalid data entered!",



            fields: [

            {
                name: "Account_ID", title: "Account", type: "select", width: 80, validate: "required",
                items: CO, valueField: "COA_ID", textField: "COA_Name",

            },

  {
      name: "Description", title: "Description", type: "text", width: 80, validate: "required",


  },
         { name: "Amount", title: "Amount", type: "text", width: 80, validate: "required" , css: "totalAmount",
         insertTemplate: function () {

             var $insertControl = jsGrid.fields.text.prototype.insertTemplate.call(this);

             insert_on_enter($insertControl,"Grid");
             return $insertControl;
         },
         },


            {
                type: "control",
                itemTemplate: function (_, item) {


                    return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                }
            }

            ]

        });
    }
</script>

