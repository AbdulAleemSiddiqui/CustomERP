@model SfDesk.Models.Quotation
@{
    ViewBag.Title = "master";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}
<style>
    .form-group {
        padding: 0px;
        margin: 0px;
    }
</style>
<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Quotation</h4>
                    <hr />
                    <input hidden="hidden" name="Q_ID" id="Q_ID" value="@Model.Q_ID" />
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group ">
                            @Html.LabelFor(model => model.Customer_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Customer_ID)
                                <input type="text" name="Customer_Name" list="Customer_List" id="Customer_Name" class="form-control text-box">
                                <datalist id="Customer_List">
                                    @{
                                        var Customer_List = new SfDesk.Models.Customer().Customer_Get_All();
                                    }

                                    @foreach (var item in Customer_List)
                                    {
                                        <option id="@item.Customer_ID" data-id="@item.Customer_ID" value="@item.Business_Name"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Q_NO, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Q_NO, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"
                               }
                           })
                                @Html.ValidationMessageFor(model => model.Q_NO, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Salesman_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Salesman_ID)
                                <input type="text" name="Salesman_Name" list="Salesman_List" id="Salesman_Name" class="form-control text-box">
                                <datalist id="Salesman_List">
                                    @{
                                        var Salesman_List = new SfDesk.Models.SalesMan().SalesMan_Get_All();
                                    }

                                    @foreach (var item in Salesman_List)
                                    {
                                        <option id="@item.S_ID" data-id="@item.S_ID" value="@item.Trading_Name"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Salesman_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2" @*style="display:none"*@>
                                <button type="button" class="btn mini btn-primary" onclick="AddSM()" style="margin-top:6px">
                                    <i class="ti-plus"></i>
                                </button>
                            </div>
                        </div>
                        <div class="form-group ">
                            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Currency)
                                <input type="text" name="Customer_Name" list="Customer_List" id="Customer_Name" class="form-control text-box">
                                <datalist id="Curr_List">
                                    @{
                                        var Curr_List = new List<string>();
                                        Curr_List.Add("pkr");
                                        Curr_List.Add("inr");
                                        Curr_List.Add("USD");
                                    }

                                    @foreach (var item in Curr_List)
                                    {
                                        <option id="@item" data-id="@item" value="@item"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="col-md-6" style="text-align:right">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Due_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Due_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Due_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group ">
                            @Html.LabelFor(model => model.Branch_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.HiddenFor(Model => Model.Branch_Name)
                                <input type="text" name="Branch_Name" list="Customer_List" id="Branch_Name" class="form-control text-box">
                                <datalist id="Branch_List">
                                    @{
                                        var Branch_List = new List<string>();
                                        Branch_List.Add("brccva");
                                        Branch_List.Add("ss");
                                        Branch_List.Add("dsad");
                                    }

                                    @foreach (var item in Branch_List)
                                    {
                                    <option id="@item" data-id="@item" value="@item"></option>
                                    }
                                </datalist>

                                @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AttachmentPath, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.AttachmentPath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AttachmentPath, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div id="child"></div>
                 
                        <div class="form-group">
                            @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                            </div>
                        </div>
                  <br />
                    <div class="jsgrid-table-panel col-lg-5">
                        <h5>Charges</h5>

                        <div id="transGrid" class="table table-striped table-bordered dataTable no-footer" style="float:left"></div>

                    </div>
                    <div class="jsgrid-table-panel col-lg-5">
                        <h5>Taxes</h5>

                        <div id="Grid" class="table table-striped table-bordered dataTable no-footer" style="float:left"></div>

                    </div>

                    <div id="Grand_Total" class="col-lg-2" style="text-align:center"><h6></h6><br /><h1 style="font-size:30px">Total</h1></div>

                    <div class="form-group">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6">
                                <input type="button" value="Save and Exit" class="btn btn-default" id="create" />
                                <input type="button" value="Approved and Exit" class="btn btn-default" id="approve" />
                                <input type="button" value="Cancel" class="btn btn-default" id="cancel" />
                                <input type="button" value="Reject" class="btn btn-default" id="reject" />
                            </div>
                        </div>


                    </div>
                </div>

            }


        </div>
    </div>
</div>
<div id='myModal' class='modal'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:auto;height:80%">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div id='myModalContent'>

            </div>
        </div>
    </div>

</div>
@section scripts
{

    <script src="~/assets/js/jsgrid.min.js"></script>
    <script src="~/assets/js/TypableDropdown.js"></script>
    <script src="~/assets/js/db.js"></script>
    <script>
        var details = []
        var Master_Id = 0

        $('#cancel').click(function () {
            window.location.href = '/PurchaseRequisition/Showall';
        });
        $('#done').click(function () {
            window.location.href = '@Url.Action("Showall", "PurchaseRequisition")';
        });
        $('#approve').click(function () {
            debugger;
            @*$.post('@Url.Action("Approve", "PurchaseRequisition")', $('form').serialize(), function (data) {
                window.location.href = '@Url.Action("ShowAll", "PurchaseRequisition")';
            })*@
            //$.post(this.action, $(this).serialize(), function (data) {

            //    Master_Id = data;
            //    addDetails()
            //})

            var data = {};
            $('form').serializeArray().map(function (x) { data[x.name] = x.value; });
            data.details = clients;
            debugger
            $.ajax({
                url: '@Url.Action("Approve", "PurchaseRequisition")',
                type: 'Post',
                dataType: 'json',
                data: {
                    p: data, pi: clients, pie: editedClients
                },
                success: function (data) {
                    window.location.href = '@Url.Action("ShowAll", "PurchaseRequisition")';
                }

            });
        });
        $(document).ready(function () {   // Help for the HTML4 version.

            $('#myModal').on("hidden.bs.modal", function () {
                $("#myModalContent").html("")
            });
            detail();



        });

        $("#create").click(function (e) {
            e.preventDefault();
            //$.post(this.action, $(this).serialize(), function (data) {

            //    Master_Id = data;
            //    addDetails()
            //})
            var data = {};
            $('form').serializeArray().map(function (x) { data[x.name] = x.value; });
            debugger
            data.details = clients;
            $.ajax({
                url: '@Url.Action("master", "PurchaseRequisition")',
                type: 'Post',
                dataType: 'json',
                data: {
                    c: data, pi: clients, pie: editedClients
                },
                success: function (data) {
                    window.location.href = '@Url.Action("ShowAll", "PurchaseRequisition")';
                }

            });
        });


        /*ye master ka he*/
        function detail() {

            $.get('@Url.Action("detail")', function (data) { $("#child").html(data); });
            $("#done").hide()
            debugger;

        };
        function AddSM() {
            $.get('@Url.Action("add", "salesman")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
      

    </script>
}