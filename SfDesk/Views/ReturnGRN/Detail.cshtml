



@{
    Layout = null;
}
<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<style>
    .total-row td {
        border-top: 2px solid #efefef;
    }
</style>
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert">
                <div class="jsgrid-table-panel">

                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>

                </div>
                <!-- /# card -->
            </div>
            <!-- /# column -->
        </div>
    </div>
</div>
<script>
    function newRow(id)
    {
        $("#"+id).jsGrid({ inserting: true });
        var tr = $("#"+id+" .jsgrid-insert-row").closest("tr");
        //if(id==="jsGrid"){
        //   var disble=tr.find("td:eq(0)")
        //   var txtdisabled=disble.find("input:eq(0)").attr("disabled", "disabled");
        //   disble=tr.find("td:eq(1)")
        //   disabled=disble.find("input:eq(0)").attr("disabled", "disabled");

        //}
        var td=tr.find("td:eq(0)")
        debugger


        inout=td.find("select:eq(0)")
        if(id==="jsgrid")
            var inout=td.find("input:eq(0)")
        var last =  $(tr).find('td:last').html('')
        $(inout).select().focus();
    } // // isme change he
    function insert_on_enter(field,id) {

        field.on("keydown", function(e) {
            debugger

            if(e.keyCode === 13 || e.keyCode === 9 ) {
                $("#"+id).jsGrid("insertItem").done(function(){
                    $("#"+id).jsGrid("clearInsert");
                    newRow()
                });

                return false;
            }
        });
    }  // isme change he
    function update_on_enter(field,id) {

        field.on("keydown", function(e) {
            debugger

            if(e.keyCode === 13 ){
                $("#"+id).jsGrid("updateItem");
                return false;
            }
            else if(e.keyCode === 27 )
            {

                $("#"+id).jsGrid("cancelEdit");
                return false;
            }
        });
    }  // isme change he
    function focusChange(field,id){
        debugger
        field.on("keydown", function(e) {
            if((field.val()==="") && (e.keyCode === 13 || e.keyCode === 9) ) {
                if(id==="jsGrid"){
                    newRow("transGrid")
                }
                else if (id==="transGrid")
                {
                    newRow("Grid")

                }
                else
                {
                    $("#create").focus()
                }
                return false;
            }
        });
    }
    var clients =[]
    var CO=[]
    var arr =[]

    $(document).ready(function () {

        debugger

         CO =@Html.Raw(Json.Encode(Session["COA"]));
        $.ajax({
            type: "GET",
            url: "/GDN/index",

            dataType: "json",
            success: function (d) {

                if (d.ID != 0)
                    arr = d
                    my()
                    newRow("jsGrid")
            }
        });


    });
    function my()
    {
        $("#jsGrid").jsGrid({
            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: false,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "Do you rete the client?",
            data: arr,
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",
            invalidMessage: "Invalid data entered!",
            onRefreshed: function(args) {
                //grand_total=Gross_total
                var items = args.grid.option("data");
                var total = { Name: "Total", "Rate":0,"Gross_Amount": 0,"Purchase_Quantitiy":0, IsTotal: true };

                items.forEach(function(item) {
                    total.Rate += parseFloat(item.Rate);
                    total.Gross_Amount += parseFloat(item.Gross_Amount);
                    total.Purchase_Quantitiy += parseFloat(item.Purchase_Quantitiy);

                });
                total.Rate = parseFloat(total.Rate.toFixed(2));
                var $totalRow = $("<tr>").addClass("total-row");
                Gross_total = total.Gross_Amount
                //grand_total=parseFloat( Gross_total+tax_total+trans_total).toFixed(2);
               // $("#Grand_Total").html('<h1 style="font-size:30px">PKR <br/> '+grand_total +'</h1>')
                args.grid._renderCells($totalRow, total);
                debugger;
                $totalRow.find("td").eq(0).html("<b>Total</b>");
                $totalRow.find("td").eq(0).attr('colspan',3);
                $totalRow.find("td").eq(1).remove();
                $totalRow.find("td").eq(1).remove();
                $totalRow.find("td").eq(0).css('text-align','right');

                args.grid._content.append($totalRow);
            },
            onItemUpdated: function(args) {
                $('#jsGrid').jsGrid("refresh");
            },
            onItemInserting: function (args) {


              //  args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'I';
                clients.push(args.item)
                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemUpdating: function (args) {


                //args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'U';
                clients.push(args.item)

                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemDeleting  : function (args) {

                debugger
                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'D';
                clients.push(args.item);
            },
                fields: [

               {name:"Item_Name", title: "Product Name", type: "text", width:  80 ,editing: false


               },
               {name:"Item_Description", title: "Product Description", type: "text", width:  80, editing: false

               },

               {name:"Qty", title: "Quantity", type: "number", width:  60,editing: false

               },
                {name:"Net_weight", title: "Net weight", type: "text", width:  80, validate: "required",
                editTemplate: function (args) {
                    var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                    update_on_enter($editControl,"jsGrid");
                    return $editControl;
                }

                },
                {name:"Gross_weight", title: "Gross weight", type: "text", width:  80, validate: "required",

                insertTemplate: function () {
                    var $insertControl = jsGrid.fields.text.prototype.insertTemplate.call(this);
                    insert_on_enter(this.insertControl,"jsGrid");
                    return $insertControl;
                },
                editTemplate: function (args) {
                    var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                   update_on_enter($editControl,"jsGrid");
                        return $editControl;
        }
                },
          {
              name: "Item_Code",
              title: "",
              type: "text",
              visible: false


          },
                {
                    name: "GRN_ID",
                    title: "",
                    type: "text",
                    visible: false


                },
                             {
                                 name: "GRND_ID",
                                 title: "",
                                 type: "text",
                                 visible: false


                             },
               { type: "control",
                   itemTemplate: function(_, item) {
                       if(item.IsTotal)
                           return "";
                       return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                   }}
                ]

            });
    }
</script>


