@model SfDesk.Models.RecurringInvoice

@{
    ViewBag.Title = "master";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}
<style>
    .form-group {
        padding: 0px;
        margin: 0px;
    }
   
</style>
<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>SalesOrder</h4>
                    <hr />
                    <input hidden="hidden" name="RI_ID" id="RI_ID" value="@Model.RI_ID" />
                    <div class="col-lg-12">
                       
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.HiddenFor(Model => Model.Frequency)
                                    <input type="text" name="Frequency" list="Frequency_List" id="Frequency" class="form-control text-box">
                                    <datalist id="Frequency_List">
                                        @{
                                        var Frequency_List = new SfDesk.Models.Customer().Customer_Get_All();
                                        }

                                        @foreach (var item in Frequency_List)
                                    {
                                            <option id="@item.Customer_ID" data-id="@item.Customer_ID" value="@item.Business_Name"></option>
                                    }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group  col-md-3">
                                @Html.LabelFor(model => model.Start_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group  col-md-3">
                                @Html.LabelFor(model => model.End_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group  col-md-3">
                                @Html.LabelFor(model => model.invoice_Status, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.HiddenFor(Model => Model.invoice_Status)
                                    <input type="text" name="invoice_Status" list="invoice_Status_List" id="invoice_Status" class="form-control text-box">
                                    <datalist id="Frequency_List">
                                        @{
                                        var invoice_Status_List = new SfDesk.Models.Customer().Customer_Get_All();
                                        }

                                        @foreach (var item in invoice_Status_List)
                                    {
                                            <option id="@item.Customer_ID" data-id="@item.Customer_ID" value="@item.Business_Name"></option>
                                    }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
                                </div>

                            </div>


                    
                       
                    </div>
                    <br />
                    <br />
                    <br />
            
                    <hr />
                  
                    <br />

                    <div class="col-lg-12">
                        <div class="col-md-6">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group ">
                                @Html.LabelFor(model => model.Customer_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.HiddenFor(Model => Model.Customer_ID)
                                    <input type="text" name="Customer_Name" list="Customer_List" id="Customer_Name" class="form-control text-box">
                                    <datalist id="Customer_List">
                                        @{
                                        var Customer_List = new SfDesk.Models.Customer().Customer_Get_All();
                                        }

                                        @foreach (var item in Customer_List)
                                    {
                                    <option id="@item.Customer_ID" data-id="@item.Customer_ID" value="@item.Business_Name"></option>
                                    }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RI_NO, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.RI_NO, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control"
                               }
                           })
                                    @Html.ValidationMessageFor(model => model.RI_NO, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Salesman_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.HiddenFor(Model => Model.Salesman_ID)
                                    <input type="text" name="Salesman_Name" list="Salesman_List" id="Salesman_Name" class="form-control text-box">
                                    <datalist id="Salesman_List">
                                        @{
                                        var Salesman_List = new SfDesk.Models.SalesMan().SalesMan_Get_All();
                                        }

                                        @foreach (var item in Salesman_List)
                                    {
                                    <option id="@item.S_ID" data-id="@item.S_ID" value="@item.Trading_Name"></option>
                                    }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Salesman_ID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2" @*style="display:none"*@>
                                    <button type="button" class="btn mini btn-primary" onclick="AddSM()" style="margin-top:6px">
                                        <i class="ti-plus"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="form-group ">
                                @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.HiddenFor(Model => Model.Currency)
                                    <input type="text" name="Customer_Name" list="Customer_List" id="Customer_Name" class="form-control text-box">
                                    <datalist id="Curr_List">
                                        @{
                                        var Curr_List = new List<string>();
                                        Curr_List.Add("pkr");
                                        Curr_List.Add("inr");
                                        Curr_List.Add("USD");
                                        }

                                        @foreach (var item in Curr_List)
                                    {
                                    <option id="@item" data-id="@item" value="@item"></option>
                                    }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6" style="text-align:right">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Due_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Due_Date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Due_Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group ">
                                @Html.LabelFor(model => model.Branch_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.HiddenFor(Model => Model.Branch_Name)
                                    <input type="text" name="Branch_Name" list="Customer_List" id="Branch_Name" class="form-control text-box">
                                    <datalist id="Branch_List">
                                        @{
                                        var Branch_List = new List<string>();
                                        Branch_List.Add("brccva");
                                        Branch_List.Add("ss");
                                        Branch_List.Add("dsad");
                                        }

                                        @foreach (var item in Branch_List)
                                    {
                                    <option id="@item" data-id="@item" value="@item"></option>
                                    }
                                    </datalist>

                                    @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AttachmentPath, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.AttachmentPath, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AttachmentPath, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Transporter_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.HiddenFor(Model => Model.Transporter_ID)
                                    <input type="text" name="Transporter_Name" list="Transporter_List" id="Transporter_Name" class="form-control text-box">
                                    <datalist id="Transporter_List">
                                        @{
                                        var Transporter_List = new SfDesk.Models.Transporter().Transporter_Get_All();
                                        }

                                        @foreach (var item in Transporter_List)
                                    {
                                    <option id="@item.T_ID" data-id="@item.T_ID" value="@item.Trading_Name"></option>
                                    }
                                    </datalist>
                                    @Html.ValidationMessageFor(model => model.Transporter_ID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                                    <button type="button" class="btn mini btn-primary" onclick="AddTrans()" style="margin-top:6px">
                                        <i class="ti-plus"></i>
                                    </button>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Vehicle_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.DropDownListFor(model => model.Vehicle_ID, new SelectList(new List<string>()), htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Vehicle_ID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2" @*style="display:none"*@>
                                    <button type="button" class="btn mini btn-primary" onclick="AddVehicle()" style="margin-top:6px">
                                        <i class="ti-plus"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                        <div id="child"></div>
                

                        <div class="form-group">
                            @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="col-lg-12">
                            <div class="jsgrid-table-panel col-lg-5">
                                <h5>Charges</h5>

                                <div id="transGrid" class="table table-striped table-bordered dataTable no-footer" style="float:left"></div>

                            </div>
                            <div class="jsgrid-table-panel col-lg-5">
                                <h5>Taxes</h5>

                                <div id="Grid" class="table table-striped table-bordered dataTable no-footer" style="float:left"></div>

                            </div>

                            <div id="Grand_Total" class="col-lg-2" style="text-align:center"><h6></h6><br /><h1 style="font-size:30px">Total</h1></div>
                        </div>
                    <br />
                    <br /><br />
<br /><br />
<br /><br />
<br /><br />
<br />
                        <div class="form-group">

                            <div class="col-md-offset-2 col-md-6">
                                <input type="button" value="Save and Exit" class="btn btn-default" id="create" />
                                <input type="button" value="Approved and Exit" class="btn btn-default" id="approve" />
                                <input type="button" value="Cancel" class="btn btn-default" id="cancel" />
                                <input type="button" value="Reject" class="btn btn-default" id="reject" />
                            </div>
                        </div>



                    </div>

                                            }


        </div>
    </div>
</div>
<div id='myModal' class='modal'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="width:auto;height:80%">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div id='myModalContent'>

            </div>
        </div>
    </div>

</div>
@section scripts
{

    <script src="~/assets/js/TypableDropdown.js"></script>
    <script src="~/assets/js/jsgrid.min.js"></script>
    <script src="~/assets/js/db.js">

    </script>
    <script>
     var details= []
     var myOpts = []
     var mytrans = []
     editedClients = []
     var Master_Id = 0;
     $(window).load(function () {
         detail()


     });
        $(document).ready(function () {   // Help for the HTML4 version.

            $('#Transporter_Name').on("change", populate);
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = today.getFullYear();

            today = mm + '/' + dd + '/' + yyyy;
            $('#ADate').val(today);
            Typable_Dropdown('Account_Receivable');
            Typable_Dropdown('Sale_Account');
            Typable_Dropdown('Customer');
            Typable_Dropdown('Transporter');
            Typable_Dropdown('Sales_Man');
            id = $('#Transporter_ID').val();




        });
        $('#cancel').click(function () {
            window.location.href = '/SaleOrder/Showall';
        });
        $('#done').click(function () {
            window.location.href = '@Url.Action("Showall", "SaleOrder")';
        });



        $("form").submit(function (e) {

            e.preventDefault();
            var data = {};
            $(this).serializeArray().map(function (x) { data[x.name] = x.value; });
            data.details = clients;
            data.transactions = myTransaction;
            data.taxes = myTaxes;
            $.ajax({
                url: this.action,
                type: 'Post',
                dataType: 'json',
                data: {
                    c: data,
                },
                success: function (data) {
                    var model = new FormData();
                    var files = $('input[type="file"]')[0].files[0];
                    model.append("file", files);
                    model.append("P_ID", data);
                    debugger;
                    $.ajax({// and other parameter is set here
                        url: '/SaleOrder/SaveImage',
                        type: "POST",
                        data: model,
                        dataType: "json",
                        cache: false,
                        contentType: false,
                        processData: false

                    })
       .always(function (result) {
       });

                    window.location.href = '@Url.Action("ShowAll", "SaleOrder")';
                }

            })
            //$.post(this.action, $(this).serialize(), function (data) {
            //    detail()
            //    ;
            //    Master_Id = data;
            //})

        });



        /*ye master ka he*/
        function detail() {

            $.get('@Url.Action("detail", "SaleOrder")', function (data) { $("#child").html(data); });
            $("#done").hide()
            debugger;

        };
        function AddSupplier() {
            $.get('@Url.Action("AddPartial", "Vendor")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        function AddTrans() {
            $.get('@Url.Action("Add", "Transporter")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        function AddVehicle() {
            var id = $('#Transporter_ID').val();
            if (id != 0) {
                $.get('@Url.Action("Add_Vehicle", "Transporter")' + '?id=' + id, function (data) { $("#myModalContent").html(data); });
                $('#myModal').modal('show');
            }
        };

        var id = 0;
        function populate() {
            id = $('#Transporter_ID').val()
            debugger;
            $.ajax({
                url: '/SaleOrder/Vehcile_Get_By_Transporter',
                type: 'GET',
                dataType: 'json',
                data: { id: id },
                success: function (d) {

                    var ddlState = $('#Vehicle_ID');
                    ddlState.empty();
                    $("#Vehicle_ID").prepend("<option value='' selected='selected'></option>");// Clear the please wait
                    $.each(d, function (i, states) {

                        ddlState.append($("<option></option>").val(states.V_ID).html(states.Vehicle_Type));
                    });
                }
            });
        }


    </script>
}
