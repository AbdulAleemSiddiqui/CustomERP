

<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<style>
    .total-row td {
        border-top: 2px solid #efefef;
    }
</style>
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert">
                <div class="jsgrid-table-panel">
                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>
                    <br />

                   
                </div>
            </div>
            <!-- /# card -->
        </div>
        <!-- /# column -->
    </div>
</div>



@*  <script src="~/assets/js/db.js"></script>*@
<script>
    var clients =[]
    var editedClients =[];
    var arr = [];
   var  items = [];
    function newRow() //ye change kia he 
    {
        $("#jsGrid").jsGrid({ inserting: true });
       var tr = $(".jsgrid-insert-row").closest("tr"); 
         
       var td=tr.find("td:eq(0)")
       var inout=td.find("input:eq(0)")
               var last =  $(tr).find('td:last').html('')
    $(inout).focus()
    }  // isme change he 
    function insert_on_enter(field)  {// ye bh
        field.on("keydown", function(e) {
            if(e.keyCode === 13 || e.keyCode === 9 ) {
                if( true)
                {
                    debugger
                    var aa =$("#jsGrid").jsGrid("insertItem").done(function(){
                        $("#jsGrid").jsGrid("clearInsert");
                        newRow()
                    });
                   
                }return false;
            }
        });
    } // isme change he 
    function update_on_enter(field) { //aur ye 
        field.on("keydown", function(e) {
            if(e.keyCode === 13 ){
                $("#jsGrid").jsGrid("updateItem");
                return false;
            }
            else if(e.keyCode === 27 )
            {
    
                $("#jsGrid").jsGrid("cancelEdit");
                return false;
            }
        });
    } // isme change he 
    $("#charges_form").submit(function (e) {
        e.preventDefault();
        var charges = $(this).serialize()+ "&PI_ID="+Master_Id;
        debugger;
        $.post(this.action,charges );   
    }); 
    function loadData() {
        $.ajax({
            type: "GET",
            url: "/PurchaseRequisition/Item_Get_All",
            dataType: "json",
            success: function (d) {
                debugger
                items = d;
                
            }
        });


        debugger;
        $.ajax({
            type: "GET",
            url: "/PurchaseRequisition/PR_Detail_Get_By_PR",
            data: { PR_ID:  Master_Id},
            dataType: "json",
            success: function (d) {
                if (d.PR_ID != 0)
                    debugger
                    arr = d
                my();
                newRow();
            }
        });
       
    }
    function total(input,id)
    {


        var val =$(input).val();
        var total = net_total*(val/100);
        total=total.toFixed(2); debugger;
        $("#"+id).val(total);
        var sum=0;
        for (var i = 0; i < 3; i++) {

            if(isNaN(parseFloat($("#c_"+i).val())))
            {
            }
            else
            {
                sum+= parseFloat($("#c_"+i).val());
            }
        }
        $('#total').html(sum.toFixed(2));
    }
    var net_total=0;
    $(function(){
       

       
    
        loadData();

        var array =@Html.Raw(Json.Encode(Model));
        var arr=[];
        $.each(array, function (key, value) {

            var na = value;
            var a= na.Store;
            arr.push({
                "Item_Code": na.Item_Code,
                "Item_Name": na.Item_Name,
                "Description": na.Description,
                "Quantity": na.Quantity,
            })
        });
        clients = arr;
    })
    //function addDetails(){
    //    console.log(clients)
    //    $.ajax({
    //        type: "POST",
    //        data:  {pi :clients, PI_ID:Master_Id },
    //        url: "add",
    //        success: function (d) {
    //            alert(d);
    //            location.reload();

    //        },

    //    })
    //}
    function focusChange(field){
        field.on("keydown", function(e) {
            if((field.val()==="") && (e.keyCode === 13 || e.keyCode === 9) ) {
                $("#create").focus();
                return false;
            }
        });
    }
    function my(){
        
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: false,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "Do you rete the client?",
            data: arr,
          
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",

            invalidMessage: "Invalid data entered!",


            onItemUpdated: function(args) {
                $('#jsGrid').jsGrid("refresh");
            },
          
            onItemInserting: function (args) {


                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'I';
                clients.push(args.item)
                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemUpdating: function (args) {


                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'U';
                clients.push(args.item)

                //if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onDataLoaded: function(args) {
            debugger
            }, 
            onItemDeleting  : function (args) {

                debugger
                args.item["PI_ID"] = Master_Id;
                args.item["action"] = 'D';
                clients.push(args.item);
                //var grid = args.grid;
                //grid.data.splice(args.itemIndex, 1);
                //   grid.refresh();
                ////if (typeof (history.pushState) != "undefined") {

                //    window.history.pushState( {} , 'PurchaseRequisition', '/PurchaseRequisition/master' );
                //}
            },
            onItemInserted: function (args) {
            },
            onItemDeleted: function(args) {
            }, 
            fields: [
            {name:"Item_ID", title: "Code", type: "select", width:  80, validate: "required", items: items, valueField: "Item_ID", textField: "Item_Code",         
                insertTemplate: function(value) { 
                var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this,args);
                var th= this;
               $insertControl.on("keyup change", function () {
                    debugger;
                    var p_Q = parseInt(this.value);
                    th._grid.fields[1].insertControl.val(p_Q)//val(unit);
                });
               focusChange($insertControl);
                return this.insertControl;
            },
            editTemplate: function (args) {
                var $editControl = jsGrid.fields.select.prototype.editTemplate.call(this,args);
                var th= this;
                $editControl.on("load", function () {
                   alert("asd")
                });
                $editControl.on("keyup change", function () {
                   
                    debugger;
                    var p_Q = parseInt(this.value);
                    th._grid.fields[1].editControl.val(p_Q)//val(unit);
                });
                update_on_enter($editControl);
                    
                return $editControl;
            }, },
            {name:"Item_Name", title: "Product", type: "select", width:  80, validate: "required",
            items: items, valueField: "Item_ID", textField: "Item_Name",         
                
            insertTemplate: function (args) {
                var th= this;
                    var $insertControl = jsGrid.fields.select.prototype.insertTemplate.call(this,args);
                    $insertControl.on("keyup change", function () {
                        debugger;
                        var p_Q = parseInt(this.value);
                        var d1= th._grid.fields[0].insertControl.val(p_Q).trigger("change");
                    });
                    update_on_enter($insertControl);
                    
                    return $insertControl;
            }, 
            editTemplate: function (args) {
                var th= this;
                var $editControl = jsGrid.fields.select.prototype.editTemplate.call(this,args);
                $editControl.on("keyup change", function () {
                    debugger;
                    var p_Q = parseInt(this.value);
                    var d1= th._grid.fields[0].editControl.val(p_Q).trigger("change");
                });
              
                update_on_enter($editControl);
                    
                return $editControl;
            }, 
            
            },
            {name:"Description", title: "Description", type: "text", width:  80, validate: "required"  ,
                editTemplate: function (args) {
                var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                update_on_enter($editControl);
                    
                return $editControl;
            }, },
            {name:"Quantity", title: "Quantity", type: "number", width:  80,
                validate: "required",
                insertTemplate: function(value) { 
                    this.insertControl = $("<input>");
                    insert_on_enter(this.insertControl);
                    return this.insertControl;
                },
               
                editTemplate: function (args) {
                    var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this,args);
                    update_on_enter($editControl);
                    
                    return $editControl;
                },
            },

            { type: "control",  
                editButton : false,
                itemTemplate: function(_, item) {
                    if(item.IsTotal)
                        return "";
                    return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                }}
            ]

        });

    };
</script>
