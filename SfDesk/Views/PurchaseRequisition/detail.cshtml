@model IEnumerable<SfDesk.Models.PurchaseInventory>

<link href="~/assets/css/jsgrid.min.css" rel="stylesheet" />
<link href="~/assets/css/jsgrid-theme.min.css" rel="stylesheet" />
<style>
    .total-row td {
        border-top: 2px solid #efefef;
    }
</style>
<div id="main-content">
    <div class="row">
        <div class="col-lg-12">
            <div class="card alert">
                <div class="jsgrid-table-panel">
                    <div id="jsGrid" class="table table-striped table-bordered dataTable no-footer"></div>
                    <br />

                   
                </div>
            </div>
            <!-- /# card -->
        </div>
        <!-- /# column -->
    </div>
</div>



@*  <script src="~/assets/js/db.js"></script>*@
<script>
    var arr = [];
    $("#charges_form").submit(function (e) {
        e.preventDefault();
        var charges = $(this).serialize()+ "&PI_ID="+Master_Id;
        debugger;
        $.post(this.action,charges );
    });
    function loadData() {
        debugger;
        $.ajax({
            type: "GET",
            url: "/PurchaseRequisition/Index",
            data: { PI_ID: Master_Id },
            dataType: "json",
            success: function (d) {
                
                if (d.ID != 0)
                    arr = d
                my()
            }
        });
    }
    function total(input,id)
    {


        var val =$(input).val();
        var total = net_total*(val/100);
        total=total.toFixed(2); debugger;
        $("#"+id).val(total);
        var sum=0;
        for (var i = 0; i < 3; i++) {
           
            if(isNaN(parseFloat($("#c_"+i).val())))
            {
            }
            else
            {
                sum+= parseFloat($("#c_"+i).val());
            }
        }
        $('#total').html(sum.toFixed(2));
    }
    var net_total=0;
    $(function(){
        loadData();

        var array =@Html.Raw(Json.Encode(Model));
        var arr=[];
        $.each(array, function (key, value) {

            var na = value;

            var a= na.Store;

            arr.push({
                
                "Item_Code": na.Item_Code,
                "Product_Name": na.Product_Name,
                "Product_Description": na.Product_Description,
                "Purchase_Quantitiy": na.Purchase_Quantitiy,
               


            })
        });
        clients = arr;
    })

    function my(){
        $("#jsGrid").jsGrid({

            height: "auto",
            width: "100%",
            filtering: false,
            editing: true,
            inserting: true,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 15,
            pageButtonCount: 5,
            deleteConfirm: "Do you rete the client?",
            data: arr,
            controller: db,
            pagerContainer: null,
            pageIndex: 1,
            pageSize: 20,
            pageButtonCount: 15,
            pagerFormat: "Pages: {first} {prev} {pages} {next} {last}    {pageIndex} of {pageCount}",
            pagePrevText: "Prev",
            pageNextText: "Next",
            pageFirstText: "First",
            pageLastText: "Last",
            pageNavigatorNextText: "...",
            pageNavigatorPrevText: "...",

            invalidMessage: "Invalid data entered!",
          
     
            onItemUpdated: function(args) {
                $('#jsGrid').jsGrid("refresh");
            },
            onItemInserting: function (args) {


                args.item["PI_ID"] = Master_Id;


                $("#grid").jsGrid("insertItem", args.item);
            },

            onItemInserted: function (args) {
                debugger;
                jQuery("#jsGrid").jsGrid("destroy");
                loadData();


            },
            fields: [
            {name:"Item_Code", title: "@Html.DisplayNameFor(m=>m.Item_Code)", type: "number", width:  80, validate: "required" },
            {name:"Product_Name", title: "@Html.DisplayNameFor(m=>m.Product_Name)", type: "text", width:  80, validate: "required" },
            {name:"Product_Description", title: "@Html.DisplayNameFor(m=>m.Product_Description)", type: "text", width:  80, validate: "required" },
            {name:"Purchase_Quantitiy", title: "@Html.DisplayNameFor(m=>m.Purchase_Quantitiy)", type: "number", width:  80,
                validate: "required",

     
            },
         
            { type: "control",
                itemTemplate: function(_, item) {
                    if(item.IsTotal)
                        return "";
                    return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                }}
            ]

        });

    };
</script>
