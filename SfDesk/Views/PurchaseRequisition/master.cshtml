@model SfDesk.Models.PurchaseInventory

@{
    ViewBag.Title = "master";
    Layout = "~/Views/Shared/_dashLayout.cshtml";
}
<style>
    .form-group {
        padding: 0px;
        margin: 0px;
    }
</style>
<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Purchase</h4>
                    <hr />
                    <input hidden="hidden" name="PI_ID" id="PI_ID" />
                    <div class="col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.PR_No, htmlAttributes: new { @class = "control-label col-md-4"})
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PR_No, new
                           {
                               htmlAttributes = new
                               {
                                   @class = "form-control", @readonly = "readonly" }
                           })
                                @Html.ValidationMessageFor(model => model.PR_No, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">

                                @Html.DropDownListFor(model => model.Department, new SelectList(new SfDesk.Models.Purchase_Type().Purchase_Type_Get_All(), "PT_ID", "PT_Name"), "select type", htmlAttributes: new { @class = "form-control" })

                                @*    @Html.EditorFor(model => model.Customer_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                            </div>
                        </div>
                   
                    </div>
                    <div class="col-md-6" style="text-align:right">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>

             

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                            </div>
                        </div>

                      
                    </div>
                    <div class="form-group">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6">
                                <input type="submit" value="Create" class="btn btn-default" id="create" />
                                <input type="button" value="Approved" class="btn btn-default" id="approve" />
                                <input type="button" value="Cancel" class="btn btn-default" id="cancel" />
                            </div>
                        </div>


                    </div>
                </div>
                                        }

            <div id="child"></div>
        </div>
    </div>
</div>

<div id='myModal' class='modal'>
    <div class="modal-dialog" style="float:right">
        <div class="modal-content col-lg-12" style="float:right;top: 220px;right: 100px; align-content:center">
            <div id='myModalContent'>

            </div>
        </div>
    </div>

</div>
@section scripts
{

    <script src="~/assets/js/jsgrid.min.js"></script>
    <script src="~/assets/js/db.js"></script>
    <script>

        $('#cancel').click(function () {
            window.location.href = '/User/Index/';
        });
        $(document).ready(function () {   // Help for the HTML4 version.
            $('select[name=Account_Payable_Name]').change(function () {
                $('input[name=other]').val($(this).val());
            });
            $('select[name=Purchase_Account_Name]').change(function () {
                $('input[name=other]').val($(this).val());
            });
        });
        $('#Account_Payable_Name').on('change', function () {
            var id = $("option").filter("[value='" + $('#Account_Payable_Name').val() + "']").data("id");
            $("[name='Account_Payable_ID']").val(id);
        });
        $('#Purchase_Account_Name').on('change', function () {
            var id = $("option").filter("[value='" + $('#Purchase_Account_Name').val() + "']").data("id");
            $("[name='Purchase_Account_ID']").val(id);
        });
        var Master_Id = 0;
        $("form").submit(function (e) {
            e.preventDefault();
            $.post(this.action, $(this).serialize(), function (data) {
                detail()
                Master_Id = data;
            })
            //$.ajax({
            //    url: this.action,
            //    type: 'Post',
            //    dataType: 'json',
            //    data: {
            //        c: $(this).serialize()
            //    },
            //    success: function (data) {
            //        detail()
            //    }

            //});
        });


        /*ye master ka he*/
        function detail() {

            $.get('@Url.Action("detail", "PurchaseRequisition")', function (data) { $("#child").html(data); });
            $("#done").hide()
        };
        function AddSupplier() {
            $.get('@Url.Action("AddPartial", "Vendor")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        function AddTrans() {
            $.get('@Url.Action("Add", "Transporter")', function (data) { $("#myModalContent").html(data); });
            $('#myModal').modal('show');

        };
        function AddVehicle() {
            var id = $('#Transporter_ID').val();
            if (id != 0) {
                $.get('@Url.Action("Add_Vehicle", "Transporter")' + '?id=' + id, function (data) { $("#myModalContent").html(data); });
                $('#myModal').modal('show');
            }
        };

        var id = 0;
        function populate() {
            id = $('#Transporter_ID').val()

            $.ajax({
                url: '/PurchaseInventory/Vehcile_Get_By_Transporter',
                type: 'GET',
                dataType: 'json',
                data: { id: id },
                success: function (d) {

                    var ddlState = $('#Vehicle_ID');
                    ddlState.empty();
                    $("#Vehicle_ID").prepend("<option value='' selected='selected'></option>");// Clear the please wait
                    $.each(d, function (i, states) {

                        ddlState.append($("<option></option>").val(states.V_ID).html(states.Vehicle_Type));
                    });
                }
            });
        }
        $('#Transporter_ID').on("change", populate);

    </script>
}