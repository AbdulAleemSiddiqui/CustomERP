@model SfDesk.Models.SalesTax



<div class="card alert">
    <div class="card-header">
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>SalesTax</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model=>model.SalesTax_ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.TaxType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.TaxType, new SelectList(new string[] { "Input", "Output" }), htmlAttributes: new { @class = "form-control" });


                            @Html.ValidationMessageFor(model => model.TaxType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SalesTax_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.SalesTax_Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SalesTax_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Account_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.Hidden("Account_ID")
                            <input type="text" name="Account_Payable_Name" list="Account_Payable_List" id="Account_Payable_Name" class="form-control text-box">
                            <datalist id="Account_Payable_List">
                                @{
                                    List<SfDesk.Models.ChartOfAccount> lst = (List<SfDesk.Models.ChartOfAccount>)Session["COA"];
                                }

                                @foreach (var item in lst)
                                {
                                    <option data-id="@item.COA_ID" value="@item.COA_Name">@item.Type_Name-@item.Code</option>
                                }

                            </datalist>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Rate_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.Rate_Type, new SelectList(new string[] { "Percentage", "Flat" }), htmlAttributes: new { @class = "form-control" });


                            @Html.ValidationMessageFor(model => model.Rate_Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Opening_Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Opening_Balance, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Opening_Balance, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-4">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
            </div>
            }
            
        </div>
    </div>
</div>            
                                        

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
